/* kbws.h
   Generated by wsdl2h 1.2.13 from http://soap.g-language.org/kbws.wsdl and typemap.dat
   2010-10-26 09:03:31 GMT
   gSOAP XML Web services tools.
   Copyright (C) 2001-2009 Robert van Engelen, Genivia Inc. All Rights Reserved.
   Part of this software is released under one of the following licenses:
   GPL or Genivia's license for commercial use.
*/

/* NOTE:

 - Compile this file with soapcpp2 to complete the code generation process.
 - Use soapcpp2 option -I to specify paths for #import
   To build with STL, 'stlvector.h' is imported from 'import' dir in package.
 - Use wsdl2h options -c and -s to generate pure C code or C++ code without STL.
 - Use 'typemap.dat' to control namespace bindings and type mappings.
   It is strongly recommended to customize the names of the namespace prefixes
   generated by wsdl2h. To do so, modify the prefix bindings in the Namespaces
   section below and add the modified lines to 'typemap.dat' to rerun wsdl2h.
 - Use Doxygen (www.doxygen.org) to browse this file.
 - Use wsdl2h option -l to view the software license terms.

   DO NOT include this file directly into your project.
   Include only the soapcpp2-generated headers and source code files.
*/

//gsoapopt cw

/******************************************************************************\
 *                                                                            *
 * http://soap.g-language.org/KBWS                                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Import                                                                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Namespaces                                                          *
 *                                                                            *
\******************************************************************************/


/* NOTE:

It is strongly recommended to customize the names of the namespace prefixes
generated by wsdl2h. To do so, modify the prefix bindings below and add the
modified lines to typemap.dat to rerun wsdl2h:

ns1 = "http://soap.g-language.org/KBWS"

*/

//gsoap ns1   schema namespace:	http://soap.g-language.org/KBWS
//gsoap ns1   schema form:	unqualified

/******************************************************************************\
 *                                                                            *
 * Schema Types                                                               *
 *                                                                            *
\******************************************************************************/


/// Built-in type "xs:boolean".
enum xsd__boolean { xsd__boolean__false_, xsd__boolean__true_ };


/// "http://soap.g-language.org/KBWS":blastInputParams is a complexType.
struct ns1__blastInputParams
{
/// Element p of type xs:string.
    char*                                p                              1;	///< Required element.
/// Element d of type xs:string.
    char*                                d                              1;	///< Required element.
/// Element server of type xs:string.
    char*                                server                         1;	///< Required element.
/// Element e of type xs:float.
    float                                e                              1;	///< Required element.
/// Element m of type xs:int.
    int                                  m                              1;	///< Required element.
/// Element F of type xs:string.
    char*                                F                              1;	///< Required element.
/// Element G of type xs:int.
    int                                  G                              1;	///< Required element.
/// Element E of type xs:int.
    int                                  E                              1;	///< Required element.
/// Element X of type xs:string.
    char*                                X                              1;	///< Required element.
/// Element q of type xs:int.
    int                                  q                              1;	///< Required element.
/// Element r of type xs:int.
    int                                  r                              1;	///< Required element.
/// Element v of type xs:int.
    int                                  v                              1;	///< Required element.
/// Element b of type xs:int.
    int                                  b                              1;	///< Required element.
/// Element f of type xs:int.
    int                                  f                              1;	///< Required element.
/// Element g of type xs:boolean.
    enum xsd__boolean                    g                              1;	///< Required element.
/// Element M of type xs:string.
    char*                                M                              1;	///< Required element.
/// Element W of type xs:int.
    int                                  W                              1;	///< Required element.
/// Element z of type xs:float.
    float                                z                              1;	///< Required element.
/// Element K of type xs:int.
    int                                  K                              1;	///< Required element.
/// Element Y of type xs:float.
    float                                Y                              1;	///< Required element.
};

/// "http://soap.g-language.org/KBWS":centroidfoldInputParams is a complexType.
struct ns1__centroidfoldInputParams
{
/// Element model of type xs:string.
    char*                                model                          1;	///< Required element.
/// Element gamma of type xs:int.
    int                                  gamma                          1;	///< Required element.
};

/// "http://soap.g-language.org/KBWS":clustalwInputParams is a complexType.
struct ns1__clustalwInputParams
{
/// Element alignment of type xs:string.
    char*                                alignment                      1;	///< Required element.
/// Element output of type xs:string.
    char*                                output                         1;	///< Required element.
/// Element matrix of type xs:string.
    char*                                matrix                         1;	///< Required element.
/// Element outorder of type xs:string.
    char*                                outorder                       1;	///< Required element.
/// Element ktup of type xs:int.
    int                                  ktup                           1;	///< Required element.
/// Element window of type xs:int.
    int                                  window                         1;	///< Required element.
/// Element gapopen of type xs:int.
    int                                  gapopen                        1;	///< Required element.
/// Element gapext of type xs:float.
    float                                gapext                         1;	///< Required element.
/// Element gapdist of type xs:int.
    int                                  gapdist                        1;	///< Required element.
/// Element endgaps of type xs:boolean.
    enum xsd__boolean                    endgaps                        1;	///< Required element.
/// Element pairgap of type xs:int.
    int                                  pairgap                        1;	///< Required element.
/// Element topdiags of type xs:int.
    int                                  topdiags                       1;	///< Required element.
/// Element score of type xs:string.
    char*                                score                          1;	///< Required element.
/// Element tossgaps of type xs:boolean.
    enum xsd__boolean                    tossgaps                       1;	///< Required element.
/// Element kimura of type xs:boolean.
    enum xsd__boolean                    kimura                         1;	///< Required element.
/// Element outputtree of type xs:string.
    char*                                outputtree                     1;	///< Required element.
/// Element tree of type xs:boolean.
    enum xsd__boolean                    tree                           1;	///< Required element.
/// Element quicktree of type xs:boolean.
    enum xsd__boolean                    quicktree                      1;	///< Required element.
/// Element align of type xs:boolean.
    enum xsd__boolean                    align                          1;	///< Required element.
/// Element clustering of type xs:string.
    char*                                clustering                     1;	///< Required element.
/// Element numiter of type xs:int.
    int                                  numiter                        1;	///< Required element.
/// Element iteration of type xs:string.
    char*                                iteration                      1;	///< Required element.
};

/// "http://soap.g-language.org/KBWS":fetchDataInputParams is a complexType.
struct ns1__fetchDataInputParams
{
/// Element format of type xs:string.
    char*                                format                         1;	///< Required element.
/// Element style of type xs:string.
    char*                                style                          1;	///< Required element.
};

/// "http://soap.g-language.org/KBWS":fetchBatchInputParams is a complexType.
struct ns1__fetchBatchInputParams
{
/// Element format of type xs:string.
    char*                                format                         1;	///< Required element.
/// Element style of type xs:string.
    char*                                style                          1;	///< Required element.
};

/// "http://soap.g-language.org/KBWS":genemarkhmmInputParams is a complexType.
struct ns1__genemarkhmmInputParams
{
/// Element title of type xs:string.
    char*                                title                          1;	///< Required element.
/// Element rbs of type xs:boolean.
    enum xsd__boolean                    rbs                            1;	///< Required element.
/// Element list of type xs:boolean.
    enum xsd__boolean                    list                           1;	///< Required element.
/// Element org of type xs:string.
    char*                                org                            1;	///< Required element.
};

/// "http://soap.g-language.org/KBWS":glimmerInputParams is a complexType.
struct ns1__glimmerInputParams
{
/// Element gencode of type xs:int.
    int                                  gencode                        1;	///< Required element.
/// Element topology of type xs:string.
    char*                                topology                       1;	///< Required element.
};

/// "http://soap.g-language.org/KBWS":kalignInputParams is a complexType.
struct ns1__kalignInputParams
{
/// Element moltype of type xs:string.
    char*                                moltype                        1;	///< Required element.
/// Element gpo of type xs:float.
    float                                gpo                            1;	///< Required element.
/// Element gpe of type xs:float.
    float                                gpe                            1;	///< Required element.
/// Element tgpe of type xs:float.
    float                                tgpe                           1;	///< Required element.
/// Element bonus of type xs:float.
    float                                bonus                          1;	///< Required element.
};

/// "http://soap.g-language.org/KBWS":mafftInputParams is a complexType.
struct ns1__mafftInputParams
{
/// Element strategy of type xs:string.
    char*                                strategy                       1;	///< Required element.
/// Element outorder of type xs:string.
    char*                                outorder                       1;	///< Required element.
/// Element op of type xs:float.
    float                                op                             1;	///< Required element.
/// Element ep of type xs:float.
    float                                ep                             1;	///< Required element.
/// Element scorematrix of type xs:string.
    char*                                scorematrix                    1;	///< Required element.
/// Element homologs of type xs:boolean.
    enum xsd__boolean                    homologs                       1;	///< Required element.
/// Element showhomologs of type xs:boolean.
    enum xsd__boolean                    showhomologs                   1;	///< Required element.
/// Element numhomologs of type xs:int.
    int                                  numhomologs                    1;	///< Required element.
/// Element threshold of type xs:float.
    float                                threshold                      1;	///< Required element.
/// Element referenceseq of type xs:string.
    char*                                referenceseq                   1;	///< Required element.
/// Element harrplot of type xs:string.
    char*                                harrplot                       1;	///< Required element.
};

/// "http://soap.g-language.org/KBWS":muscleInputParams is a complexType.
struct ns1__muscleInputParams
{
/// Element output of type xs:string.
    char*                                output                         1;	///< Required element.
/// Element outputtree of type xs:string.
    char*                                outputtree                     1;	///< Required element.
/// Element maxiters of type xs:int.
    int                                  maxiters                       1;	///< Required element.
/// Element diags of type xs:boolean.
    enum xsd__boolean                    diags                          1;	///< Required element.
};

/// "http://soap.g-language.org/KBWS":phobiusInputParams is a complexType.
struct ns1__phobiusInputParams
{
/// Element outputformat of type xs:string.
    char*                                outputformat                   1;	///< Required element.
};

/// "http://soap.g-language.org/KBWS":psortInputParams is a complexType.
struct ns1__psortInputParams
{
/// Element org of type xs:string.
    char*                                org                            1;	///< Required element.
/// Element title of type xs:string.
    char*                                title                          1;	///< Required element.
};

/// "http://soap.g-language.org/KBWS":psortbInputParams is a complexType.
struct ns1__psortbInputParams
{
/// Element format of type xs:string.
    char*                                format                         1;	///< Required element.
/// Element gram of type xs:string.
    char*                                gram                           1;	///< Required element.
};

/// "http://soap.g-language.org/KBWS":tcoffeeInputParams is a complexType.
struct ns1__tcoffeeInputParams
{
/// Element matrix of type xs:string.
    char*                                matrix                         1;	///< Required element.
/// Element outorder of type xs:string.
    char*                                outorder                       1;	///< Required element.
};

/// "http://soap.g-language.org/KBWS":tRNAscanInputParams is a complexType.
struct ns1__tRNAscanInputParams
{
/// Element title of type xs:string.
    char*                                title                          1;	///< Required element.
/// Element mode of type xs:string.
    char*                                mode                           1;	///< Required element.
/// Element source of type xs:string.
    char*                                source                         1;	///< Required element.
/// Element gcode of type xs:string.
    char*                                gcode                          1;	///< Required element.
/// Element pesudogene of type xs:boolean.
    enum xsd__boolean                    pesudogene                     1;	///< Required element.
/// Element origin of type xs:boolean.
    enum xsd__boolean                    origin                         1;	///< Required element.
/// Element ace of type xs:boolean.
    enum xsd__boolean                    ace                            1;	///< Required element.
/// Element codons of type xs:boolean.
    enum xsd__boolean                    codons                         1;	///< Required element.
/// Element fpos of type xs:boolean.
    enum xsd__boolean                    fpos                           1;	///< Required element.
/// Element breakdown of type xs:boolean.
    enum xsd__boolean                    breakdown                      1;	///< Required element.
/// Element covescore of type xs:string.
    char*                                covescore                      1;	///< Required element.
/// Element euparams of type xs:string.
    char*                                euparams                       1;	///< Required element.
/// Element euscore of type xs:string.
    char*                                euscore                        1;	///< Required element.
};

/// "http://soap.g-language.org/KBWS":ssearchInputParams is a complexType.
struct ns1__ssearchInputParams
{
/// Element d of type xs:string.
    char*                                d                              1;	///< Required element.
/// Element moltype of type xs:string.
    char*                                moltype                        1;	///< Required element.
/// Element histogram of type xs:boolean.
    enum xsd__boolean                    histogram                      1;	///< Required element.
/// Element nucleotide of type xs:boolean.
    enum xsd__boolean                    nucleotide                     1;	///< Required element.
/// Element topstrand of type xs:boolean.
    enum xsd__boolean                    topstrand                      1;	///< Required element.
/// Element bottomstrand of type xs:boolean.
    enum xsd__boolean                    bottomstrand                   1;	///< Required element.
/// Element gapopen of type xs:int.
    int                                  gapopen                        1;	///< Required element.
/// Element gapext of type xs:int.
    int                                  gapext                         1;	///< Required element.
/// Element scores of type xs:int.
    int                                  scores                         1;	///< Required element.
/// Element alignments of type xs:int.
    int                                  alignments                     1;	///< Required element.
/// Element ktup of type xs:int.
    int                                  ktup                           1;	///< Required element.
/// Element matrix of type xs:string.
    char*                                matrix                         1;	///< Required element.
/// Element eupper of type xs:float.
    float                                eupper                         1;	///< Required element.
/// Element elower of type xs:float.
    float                                elower                         1;	///< Required element.
/// Element dbrange of type xs:string.
    char*                                dbrange                        1;	///< Required element.
/// Element seqrange of type xs:string.
    char*                                seqrange                       1;	///< Required element.
};

/// "http://soap.g-language.org/KBWS":weblogoInputParams is a complexType.
struct ns1__weblogoInputParams
{
/// Element format of type xs:string.
    char*                                format                         1;	///< Required element.
};

/// "http://soap.g-language.org/KBWS":wolfPsortInputParams is a complexType.
struct ns1__wolfPsortInputParams
{
/// Element org of type xs:string.
    char*                                org                            1;	///< Required element.
};

/// "http://soap.g-language.org/KBWS":RNAfoldInputParams is a complexType.
struct ns1__RNAfoldInputParams
{
/// Element method of type xs:string.
    char*                                method                         1;	///< Required element.
/// Element noclosegu of type xs:boolean.
    enum xsd__boolean                    noclosegu                      1;	///< Required element.
/// Element nolp of type xs:boolean.
    enum xsd__boolean                    nolp                           1;	///< Required element.
/// Element dangling of type xs:string.
    char*                                dangling                       1;	///< Required element.
/// Element param of type xs:string.
    char*                                param                          1;	///< Required element.
/// Element tmp of type xs:int.
    int                                  tmp                            1;	///< Required element.
/// Element circ of type xs:boolean.
    enum xsd__boolean                    circ                           1;	///< Required element.
};

/// "http://soap.g-language.org/KBWS":showBlastDBInputParams is a complexType.
struct ns1__showBlastDBInputParams
{
/// Element nucleotide of type xs:boolean.
    enum xsd__boolean                    nucleotide                     1;	///< Required element.
/// Element protein of type xs:boolean.
    enum xsd__boolean                    protein                        1;	///< Required element.
};

/******************************************************************************\
 *                                                                            *
 * Services                                                                   *
 *                                                                            *
\******************************************************************************/


//gsoap ns1  service name:	KBWSSoapBinding 
//gsoap ns1  service type:	KBWS 
//gsoap ns1  service port:	http://soap.g-language.org/kbws/kbws_Ver1.0.0.cgi 
//gsoap ns1  service namespace:	http://soap.g-language.org/KBWS 
//gsoap ns1  service transport:	http://schemas.xmlsoap.org/soap/http 

/** @mainpage KBWS Definitions

@section KBWS_bindings Bindings
  - @ref KBWSSoapBinding

*/

/**

@page KBWSSoapBinding Binding "KBWSSoapBinding"

@section KBWSSoapBinding_operations Operations of Binding  "KBWSSoapBinding"
  - @ref ns1__runBlast
  - @ref ns1__runCentroidfold
  - @ref ns1__runClustalw
  - @ref ns1__runFetchData
  - @ref ns1__runFetchBatch
  - @ref ns1__runGenemarkhmm
  - @ref ns1__runGlimmer
  - @ref ns1__runKalign
  - @ref ns1__runMafft
  - @ref ns1__runMuscle
  - @ref ns1__runPhobius
  - @ref ns1__runProtpars
  - @ref ns1__runProtdist
  - @ref ns1__runDnapars
  - @ref ns1__runDnapenny
  - @ref ns1__runDnacomp
  - @ref ns1__runDnainvar
  - @ref ns1__runDnaml
  - @ref ns1__runDnamlk
  - @ref ns1__runDnadist
  - @ref ns1__runGendist
  - @ref ns1__runSeqboot
  - @ref ns1__runRestml
  - @ref ns1__runClique
  - @ref ns1__runFitch
  - @ref ns1__runKitsch
  - @ref ns1__runNeighbor
  - @ref ns1__runContml
  - @ref ns1__runGendis
  - @ref ns1__runMix
  - @ref ns1__runPenny
  - @ref ns1__runDollop
  - @ref ns1__runDolpenny
  - @ref ns1__runPsort
  - @ref ns1__runPsort2
  - @ref ns1__runPsortb
  - @ref ns1__runSsearch
  - @ref ns1__runTcoffee
  - @ref ns1__runtRNAscan
  - @ref ns1__runWeblogo
  - @ref ns1__runWolfPsort
  - @ref ns1__runRNAfold
  - @ref ns1__showBlastDB
  - @ref ns1__checkStatus
  - @ref ns1__checkStatus_USCOREretJobid
  - @ref ns1__getResult
  - @ref ns1__getMultiResult

@section KBWSSoapBinding_ports Endpoints of Binding  "KBWSSoapBinding"
  - http://soap.g-language.org/kbws/kbws_Ver1.0.0.cgi

Note: use wsdl2h option -N to change the service binding prefix name

*/

/******************************************************************************\
 *                                                                            *
 * KBWSSoapBinding                                                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * ns1__runBlast                                                              *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__runBlast" of service binding "KBWSSoapBinding"

/**

Operation details:

  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"
  - SOAP action="http://soap.g-language.org/KBWS#runBlast"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__runBlast(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    char*                               in0,
    struct ns1__blastInputParams*       params,
    // response parameters:
    char*                              *_jobid
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__runBlast(
    struct soap *soap,
    // request parameters:
    char*                               in0,
    struct ns1__blastInputParams*       params,
    // response parameters:
    char*                              *_jobid
  );
@endcode

*/

//gsoap ns1  service method-style:	runBlast rpc
//gsoap ns1  service method-encoding:	runBlast http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	runBlast http://soap.g-language.org/KBWS#runBlast
int ns1__runBlast(
    char*                               _in0,	///< Request parameter
    struct ns1__blastInputParams*       _params,	///< Request parameter
    char*                              *_jobid	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * ns1__runCentroidfold                                                       *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__runCentroidfold" of service binding "KBWSSoapBinding"

/**

Operation details:

  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"
  - SOAP action="http://soap.g-language.org/KBWS#runCentroidfold"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__runCentroidfold(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    char*                               in0,
    struct ns1__centroidfoldInputParams* params,
    // response parameters:
    char*                              *_jobid
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__runCentroidfold(
    struct soap *soap,
    // request parameters:
    char*                               in0,
    struct ns1__centroidfoldInputParams* params,
    // response parameters:
    char*                              *_jobid
  );
@endcode

*/

//gsoap ns1  service method-style:	runCentroidfold rpc
//gsoap ns1  service method-encoding:	runCentroidfold http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	runCentroidfold http://soap.g-language.org/KBWS#runCentroidfold
int ns1__runCentroidfold(
    char*                               _in0,	///< Request parameter
    struct ns1__centroidfoldInputParams* _params,	///< Request parameter
    char*                              *_jobid	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * ns1__runClustalw                                                           *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__runClustalw" of service binding "KBWSSoapBinding"

/**

Operation details:

  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"
  - SOAP action="http://soap.g-language.org/KBWS#runClustalw"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__runClustalw(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    char*                               in0,
    struct ns1__clustalwInputParams*    params,
    // response parameters:
    char*                              *_jobid
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__runClustalw(
    struct soap *soap,
    // request parameters:
    char*                               in0,
    struct ns1__clustalwInputParams*    params,
    // response parameters:
    char*                              *_jobid
  );
@endcode

*/

//gsoap ns1  service method-style:	runClustalw rpc
//gsoap ns1  service method-encoding:	runClustalw http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	runClustalw http://soap.g-language.org/KBWS#runClustalw
int ns1__runClustalw(
    char*                               _in0,	///< Request parameter
    struct ns1__clustalwInputParams*    _params,	///< Request parameter
    char*                              *_jobid	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * ns1__runFetchData                                                          *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__runFetchData" of service binding "KBWSSoapBinding"

/**

Operation details:

  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"
  - SOAP action="http://soap.g-language.org/KBWS#runFetchData"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__runFetchData(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    char*                               in0,
    struct ns1__fetchDataInputParams*   params,
    // response parameters:
    char*                              *_jobid
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__runFetchData(
    struct soap *soap,
    // request parameters:
    char*                               in0,
    struct ns1__fetchDataInputParams*   params,
    // response parameters:
    char*                              *_jobid
  );
@endcode

*/

//gsoap ns1  service method-style:	runFetchData rpc
//gsoap ns1  service method-encoding:	runFetchData http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	runFetchData http://soap.g-language.org/KBWS#runFetchData
int ns1__runFetchData(
    char*                               _in0,	///< Request parameter
    struct ns1__fetchDataInputParams*   _params,	///< Request parameter
    char*                              *_jobid	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * ns1__runFetchBatch                                                         *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__runFetchBatch" of service binding "KBWSSoapBinding"

/**

Operation details:

  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"
  - SOAP action="http://soap.g-language.org/KBWS#runFetchBatch"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__runFetchBatch(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    char*                               in0,
    char*                               in1,
    struct ns1__fetchBatchInputParams*  params,
    // response parameters:
    char*                              *_jobid
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__runFetchBatch(
    struct soap *soap,
    // request parameters:
    char*                               in0,
    char*                               in1,
    struct ns1__fetchBatchInputParams*  params,
    // response parameters:
    char*                              *_jobid
  );
@endcode

*/

//gsoap ns1  service method-style:	runFetchBatch rpc
//gsoap ns1  service method-encoding:	runFetchBatch http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	runFetchBatch http://soap.g-language.org/KBWS#runFetchBatch
int ns1__runFetchBatch(
    char*                               _in0,	///< Request parameter
    char*                               _in1,	///< Request parameter
    struct ns1__fetchBatchInputParams*  _params,	///< Request parameter
    char*                              *_jobid	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * ns1__runGenemarkhmm                                                        *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__runGenemarkhmm" of service binding "KBWSSoapBinding"

/**

Operation details:

  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"
  - SOAP action="http://soap.g-language.org/KBWS#runGenemarkhmm"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__runGenemarkhmm(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    char*                               in0,
    struct ns1__genemarkhmmInputParams* params,
    // response parameters:
    char*                              *_jobid
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__runGenemarkhmm(
    struct soap *soap,
    // request parameters:
    char*                               in0,
    struct ns1__genemarkhmmInputParams* params,
    // response parameters:
    char*                              *_jobid
  );
@endcode

*/

//gsoap ns1  service method-style:	runGenemarkhmm rpc
//gsoap ns1  service method-encoding:	runGenemarkhmm http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	runGenemarkhmm http://soap.g-language.org/KBWS#runGenemarkhmm
int ns1__runGenemarkhmm(
    char*                               _in0,	///< Request parameter
    struct ns1__genemarkhmmInputParams* _params,	///< Request parameter
    char*                              *_jobid	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * ns1__runGlimmer                                                            *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__runGlimmer" of service binding "KBWSSoapBinding"

/**

Operation details:

  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"
  - SOAP action="http://soap.g-language.org/KBWS#runGlimmer"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__runGlimmer(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    char*                               in0,
    struct ns1__glimmerInputParams*     params,
    // response parameters:
    char*                              *_jobid
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__runGlimmer(
    struct soap *soap,
    // request parameters:
    char*                               in0,
    struct ns1__glimmerInputParams*     params,
    // response parameters:
    char*                              *_jobid
  );
@endcode

*/

//gsoap ns1  service method-style:	runGlimmer rpc
//gsoap ns1  service method-encoding:	runGlimmer http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	runGlimmer http://soap.g-language.org/KBWS#runGlimmer
int ns1__runGlimmer(
    char*                               _in0,	///< Request parameter
    struct ns1__glimmerInputParams*     _params,	///< Request parameter
    char*                              *_jobid	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * ns1__runKalign                                                             *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__runKalign" of service binding "KBWSSoapBinding"

/**

Operation details:

  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"
  - SOAP action="http://soap.g-language.org/KBWS#runKalign"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__runKalign(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    char*                               in0,
    struct ns1__kalignInputParams*      params,
    // response parameters:
    char*                              *_jobid
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__runKalign(
    struct soap *soap,
    // request parameters:
    char*                               in0,
    struct ns1__kalignInputParams*      params,
    // response parameters:
    char*                              *_jobid
  );
@endcode

*/

//gsoap ns1  service method-style:	runKalign rpc
//gsoap ns1  service method-encoding:	runKalign http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	runKalign http://soap.g-language.org/KBWS#runKalign
int ns1__runKalign(
    char*                               _in0,	///< Request parameter
    struct ns1__kalignInputParams*      _params,	///< Request parameter
    char*                              *_jobid	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * ns1__runMafft                                                              *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__runMafft" of service binding "KBWSSoapBinding"

/**

Operation details:

  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"
  - SOAP action="http://soap.g-language.org/KBWS#runMafft"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__runMafft(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    char*                               in0,
    struct ns1__mafftInputParams*       params,
    // response parameters:
    char*                              *_jobid
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__runMafft(
    struct soap *soap,
    // request parameters:
    char*                               in0,
    struct ns1__mafftInputParams*       params,
    // response parameters:
    char*                              *_jobid
  );
@endcode

*/

//gsoap ns1  service method-style:	runMafft rpc
//gsoap ns1  service method-encoding:	runMafft http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	runMafft http://soap.g-language.org/KBWS#runMafft
int ns1__runMafft(
    char*                               _in0,	///< Request parameter
    struct ns1__mafftInputParams*       _params,	///< Request parameter
    char*                              *_jobid	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * ns1__runMuscle                                                             *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__runMuscle" of service binding "KBWSSoapBinding"

/**

Operation details:

  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"
  - SOAP action="http://soap.g-language.org/KBWS#runMuscle"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__runMuscle(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    char*                               in0,
    struct ns1__muscleInputParams*      params,
    // response parameters:
    char*                              *_jobid
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__runMuscle(
    struct soap *soap,
    // request parameters:
    char*                               in0,
    struct ns1__muscleInputParams*      params,
    // response parameters:
    char*                              *_jobid
  );
@endcode

*/

//gsoap ns1  service method-style:	runMuscle rpc
//gsoap ns1  service method-encoding:	runMuscle http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	runMuscle http://soap.g-language.org/KBWS#runMuscle
int ns1__runMuscle(
    char*                               _in0,	///< Request parameter
    struct ns1__muscleInputParams*      _params,	///< Request parameter
    char*                              *_jobid	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * ns1__runPhobius                                                            *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__runPhobius" of service binding "KBWSSoapBinding"

/**

Operation details:

  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"
  - SOAP action="http://soap.g-language.org/KBWS#runPhobius"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__runPhobius(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    char*                               in0,
    struct ns1__phobiusInputParams*     params,
    // response parameters:
    char*                              *_jobid
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__runPhobius(
    struct soap *soap,
    // request parameters:
    char*                               in0,
    struct ns1__phobiusInputParams*     params,
    // response parameters:
    char*                              *_jobid
  );
@endcode

*/

//gsoap ns1  service method-style:	runPhobius rpc
//gsoap ns1  service method-encoding:	runPhobius http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	runPhobius http://soap.g-language.org/KBWS#runPhobius
int ns1__runPhobius(
    char*                               _in0,	///< Request parameter
    struct ns1__phobiusInputParams*     _params,	///< Request parameter
    char*                              *_jobid	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * ns1__runProtpars                                                           *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__runProtpars" of service binding "KBWSSoapBinding"

/**

Operation details:

  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"
  - SOAP action="http://soap.g-language.org/KBWS#runProtpars"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__runProtpars(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    char*                               in0,
    // response parameters:
    char*                              *_jobid
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__runProtpars(
    struct soap *soap,
    // request parameters:
    char*                               in0,
    // response parameters:
    char*                              *_jobid
  );
@endcode

*/

//gsoap ns1  service method-style:	runProtpars rpc
//gsoap ns1  service method-encoding:	runProtpars http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	runProtpars http://soap.g-language.org/KBWS#runProtpars
int ns1__runProtpars(
    char*                               _in0,	///< Request parameter
    char*                              *_jobid	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * ns1__runProtdist                                                           *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__runProtdist" of service binding "KBWSSoapBinding"

/**

Operation details:

  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"
  - SOAP action="http://soap.g-language.org/KBWS#runProtdist"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__runProtdist(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    char*                               in0,
    // response parameters:
    char*                              *_jobid
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__runProtdist(
    struct soap *soap,
    // request parameters:
    char*                               in0,
    // response parameters:
    char*                              *_jobid
  );
@endcode

*/

//gsoap ns1  service method-style:	runProtdist rpc
//gsoap ns1  service method-encoding:	runProtdist http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	runProtdist http://soap.g-language.org/KBWS#runProtdist
int ns1__runProtdist(
    char*                               _in0,	///< Request parameter
    char*                              *_jobid	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * ns1__runDnapars                                                            *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__runDnapars" of service binding "KBWSSoapBinding"

/**

Operation details:

  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"
  - SOAP action="http://soap.g-language.org/KBWS#runDnapars"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__runDnapars(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    char*                               in0,
    // response parameters:
    char*                              *_jobid
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__runDnapars(
    struct soap *soap,
    // request parameters:
    char*                               in0,
    // response parameters:
    char*                              *_jobid
  );
@endcode

*/

//gsoap ns1  service method-style:	runDnapars rpc
//gsoap ns1  service method-encoding:	runDnapars http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	runDnapars http://soap.g-language.org/KBWS#runDnapars
int ns1__runDnapars(
    char*                               _in0,	///< Request parameter
    char*                              *_jobid	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * ns1__runDnapenny                                                           *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__runDnapenny" of service binding "KBWSSoapBinding"

/**

Operation details:

  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"
  - SOAP action="http://soap.g-language.org/KBWS#runDnapenny"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__runDnapenny(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    char*                               in0,
    // response parameters:
    char*                              *_jobid
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__runDnapenny(
    struct soap *soap,
    // request parameters:
    char*                               in0,
    // response parameters:
    char*                              *_jobid
  );
@endcode

*/

//gsoap ns1  service method-style:	runDnapenny rpc
//gsoap ns1  service method-encoding:	runDnapenny http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	runDnapenny http://soap.g-language.org/KBWS#runDnapenny
int ns1__runDnapenny(
    char*                               _in0,	///< Request parameter
    char*                              *_jobid	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * ns1__runDnacomp                                                            *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__runDnacomp" of service binding "KBWSSoapBinding"

/**

Operation details:

  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"
  - SOAP action="http://soap.g-language.org/KBWS#runDnacomp"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__runDnacomp(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    char*                               in0,
    // response parameters:
    char*                              *_jobid
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__runDnacomp(
    struct soap *soap,
    // request parameters:
    char*                               in0,
    // response parameters:
    char*                              *_jobid
  );
@endcode

*/

//gsoap ns1  service method-style:	runDnacomp rpc
//gsoap ns1  service method-encoding:	runDnacomp http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	runDnacomp http://soap.g-language.org/KBWS#runDnacomp
int ns1__runDnacomp(
    char*                               _in0,	///< Request parameter
    char*                              *_jobid	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * ns1__runDnainvar                                                           *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__runDnainvar" of service binding "KBWSSoapBinding"

/**

Operation details:

  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"
  - SOAP action="http://soap.g-language.org/KBWS#runDnainvar"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__runDnainvar(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    char*                               in0,
    // response parameters:
    char*                              *_jobid
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__runDnainvar(
    struct soap *soap,
    // request parameters:
    char*                               in0,
    // response parameters:
    char*                              *_jobid
  );
@endcode

*/

//gsoap ns1  service method-style:	runDnainvar rpc
//gsoap ns1  service method-encoding:	runDnainvar http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	runDnainvar http://soap.g-language.org/KBWS#runDnainvar
int ns1__runDnainvar(
    char*                               _in0,	///< Request parameter
    char*                              *_jobid	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * ns1__runDnaml                                                              *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__runDnaml" of service binding "KBWSSoapBinding"

/**

Operation details:

  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"
  - SOAP action="http://soap.g-language.org/KBWS#runDnaml"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__runDnaml(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    char*                               in0,
    // response parameters:
    char*                              *_jobid
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__runDnaml(
    struct soap *soap,
    // request parameters:
    char*                               in0,
    // response parameters:
    char*                              *_jobid
  );
@endcode

*/

//gsoap ns1  service method-style:	runDnaml rpc
//gsoap ns1  service method-encoding:	runDnaml http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	runDnaml http://soap.g-language.org/KBWS#runDnaml
int ns1__runDnaml(
    char*                               _in0,	///< Request parameter
    char*                              *_jobid	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * ns1__runDnamlk                                                             *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__runDnamlk" of service binding "KBWSSoapBinding"

/**

Operation details:

  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"
  - SOAP action="http://soap.g-language.org/KBWS#runDnamlk"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__runDnamlk(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    char*                               in0,
    // response parameters:
    char*                              *_jobid
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__runDnamlk(
    struct soap *soap,
    // request parameters:
    char*                               in0,
    // response parameters:
    char*                              *_jobid
  );
@endcode

*/

//gsoap ns1  service method-style:	runDnamlk rpc
//gsoap ns1  service method-encoding:	runDnamlk http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	runDnamlk http://soap.g-language.org/KBWS#runDnamlk
int ns1__runDnamlk(
    char*                               _in0,	///< Request parameter
    char*                              *_jobid	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * ns1__runDnadist                                                            *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__runDnadist" of service binding "KBWSSoapBinding"

/**

Operation details:

  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"
  - SOAP action="http://soap.g-language.org/KBWS#runDnadist"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__runDnadist(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    char*                               in0,
    // response parameters:
    char*                              *_jobid
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__runDnadist(
    struct soap *soap,
    // request parameters:
    char*                               in0,
    // response parameters:
    char*                              *_jobid
  );
@endcode

*/

//gsoap ns1  service method-style:	runDnadist rpc
//gsoap ns1  service method-encoding:	runDnadist http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	runDnadist http://soap.g-language.org/KBWS#runDnadist
int ns1__runDnadist(
    char*                               _in0,	///< Request parameter
    char*                              *_jobid	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * ns1__runGendist                                                            *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__runGendist" of service binding "KBWSSoapBinding"

/**

Operation details:

  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"
  - SOAP action="http://soap.g-language.org/KBWS#runGendist"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__runGendist(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    char*                               in0,
    // response parameters:
    char*                              *_jobid
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__runGendist(
    struct soap *soap,
    // request parameters:
    char*                               in0,
    // response parameters:
    char*                              *_jobid
  );
@endcode

*/

//gsoap ns1  service method-style:	runGendist rpc
//gsoap ns1  service method-encoding:	runGendist http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	runGendist http://soap.g-language.org/KBWS#runGendist
int ns1__runGendist(
    char*                               _in0,	///< Request parameter
    char*                              *_jobid	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * ns1__runSeqboot                                                            *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__runSeqboot" of service binding "KBWSSoapBinding"

/**

Operation details:

  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"
  - SOAP action="http://soap.g-language.org/KBWS#runSeqboot"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__runSeqboot(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    char*                               in0,
    // response parameters:
    char*                              *_jobid
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__runSeqboot(
    struct soap *soap,
    // request parameters:
    char*                               in0,
    // response parameters:
    char*                              *_jobid
  );
@endcode

*/

//gsoap ns1  service method-style:	runSeqboot rpc
//gsoap ns1  service method-encoding:	runSeqboot http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	runSeqboot http://soap.g-language.org/KBWS#runSeqboot
int ns1__runSeqboot(
    char*                               _in0,	///< Request parameter
    char*                              *_jobid	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * ns1__runRestml                                                             *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__runRestml" of service binding "KBWSSoapBinding"

/**

Operation details:

  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"
  - SOAP action="http://soap.g-language.org/KBWS#runRestml"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__runRestml(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    char*                               in0,
    // response parameters:
    char*                              *_jobid
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__runRestml(
    struct soap *soap,
    // request parameters:
    char*                               in0,
    // response parameters:
    char*                              *_jobid
  );
@endcode

*/

//gsoap ns1  service method-style:	runRestml rpc
//gsoap ns1  service method-encoding:	runRestml http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	runRestml http://soap.g-language.org/KBWS#runRestml
int ns1__runRestml(
    char*                               _in0,	///< Request parameter
    char*                              *_jobid	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * ns1__runClique                                                             *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__runClique" of service binding "KBWSSoapBinding"

/**

Operation details:

  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"
  - SOAP action="http://soap.g-language.org/KBWS#runClique"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__runClique(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    char*                               in0,
    // response parameters:
    char*                              *_jobid
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__runClique(
    struct soap *soap,
    // request parameters:
    char*                               in0,
    // response parameters:
    char*                              *_jobid
  );
@endcode

*/

//gsoap ns1  service method-style:	runClique rpc
//gsoap ns1  service method-encoding:	runClique http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	runClique http://soap.g-language.org/KBWS#runClique
int ns1__runClique(
    char*                               _in0,	///< Request parameter
    char*                              *_jobid	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * ns1__runFitch                                                              *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__runFitch" of service binding "KBWSSoapBinding"

/**

Operation details:

  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"
  - SOAP action="http://soap.g-language.org/KBWS#runFitch"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__runFitch(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    char*                               in0,
    // response parameters:
    char*                              *_jobid
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__runFitch(
    struct soap *soap,
    // request parameters:
    char*                               in0,
    // response parameters:
    char*                              *_jobid
  );
@endcode

*/

//gsoap ns1  service method-style:	runFitch rpc
//gsoap ns1  service method-encoding:	runFitch http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	runFitch http://soap.g-language.org/KBWS#runFitch
int ns1__runFitch(
    char*                               _in0,	///< Request parameter
    char*                              *_jobid	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * ns1__runKitsch                                                             *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__runKitsch" of service binding "KBWSSoapBinding"

/**

Operation details:

  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"
  - SOAP action="http://soap.g-language.org/KBWS#runKitsch"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__runKitsch(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    char*                               in0,
    // response parameters:
    char*                              *_jobid
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__runKitsch(
    struct soap *soap,
    // request parameters:
    char*                               in0,
    // response parameters:
    char*                              *_jobid
  );
@endcode

*/

//gsoap ns1  service method-style:	runKitsch rpc
//gsoap ns1  service method-encoding:	runKitsch http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	runKitsch http://soap.g-language.org/KBWS#runKitsch
int ns1__runKitsch(
    char*                               _in0,	///< Request parameter
    char*                              *_jobid	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * ns1__runNeighbor                                                           *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__runNeighbor" of service binding "KBWSSoapBinding"

/**

Operation details:

  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"
  - SOAP action="http://soap.g-language.org/KBWS#runNeighbor"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__runNeighbor(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    char*                               in0,
    // response parameters:
    char*                              *_jobid
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__runNeighbor(
    struct soap *soap,
    // request parameters:
    char*                               in0,
    // response parameters:
    char*                              *_jobid
  );
@endcode

*/

//gsoap ns1  service method-style:	runNeighbor rpc
//gsoap ns1  service method-encoding:	runNeighbor http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	runNeighbor http://soap.g-language.org/KBWS#runNeighbor
int ns1__runNeighbor(
    char*                               _in0,	///< Request parameter
    char*                              *_jobid	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * ns1__runContml                                                             *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__runContml" of service binding "KBWSSoapBinding"

/**

Operation details:

  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"
  - SOAP action="http://soap.g-language.org/KBWS#runContml"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__runContml(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    char*                               in0,
    // response parameters:
    char*                              *_jobid
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__runContml(
    struct soap *soap,
    // request parameters:
    char*                               in0,
    // response parameters:
    char*                              *_jobid
  );
@endcode

*/

//gsoap ns1  service method-style:	runContml rpc
//gsoap ns1  service method-encoding:	runContml http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	runContml http://soap.g-language.org/KBWS#runContml
int ns1__runContml(
    char*                               _in0,	///< Request parameter
    char*                              *_jobid	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * ns1__runGendis                                                             *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__runGendis" of service binding "KBWSSoapBinding"

/**

Operation details:

  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"
  - SOAP action="http://soap.g-language.org/KBWS#runGendis"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__runGendis(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    char*                               in0,
    // response parameters:
    char*                              *_jobid
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__runGendis(
    struct soap *soap,
    // request parameters:
    char*                               in0,
    // response parameters:
    char*                              *_jobid
  );
@endcode

*/

//gsoap ns1  service method-style:	runGendis rpc
//gsoap ns1  service method-encoding:	runGendis http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	runGendis http://soap.g-language.org/KBWS#runGendis
int ns1__runGendis(
    char*                               _in0,	///< Request parameter
    char*                              *_jobid	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * ns1__runMix                                                                *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__runMix" of service binding "KBWSSoapBinding"

/**

Operation details:

  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"
  - SOAP action="http://soap.g-language.org/KBWS#runMix"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__runMix(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    char*                               in0,
    // response parameters:
    char*                              *_jobid
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__runMix(
    struct soap *soap,
    // request parameters:
    char*                               in0,
    // response parameters:
    char*                              *_jobid
  );
@endcode

*/

//gsoap ns1  service method-style:	runMix rpc
//gsoap ns1  service method-encoding:	runMix http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	runMix http://soap.g-language.org/KBWS#runMix
int ns1__runMix(
    char*                               _in0,	///< Request parameter
    char*                              *_jobid	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * ns1__runPenny                                                              *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__runPenny" of service binding "KBWSSoapBinding"

/**

Operation details:

  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"
  - SOAP action="http://soap.g-language.org/KBWS#runPenny"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__runPenny(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    char*                               in0,
    // response parameters:
    char*                              *_jobid
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__runPenny(
    struct soap *soap,
    // request parameters:
    char*                               in0,
    // response parameters:
    char*                              *_jobid
  );
@endcode

*/

//gsoap ns1  service method-style:	runPenny rpc
//gsoap ns1  service method-encoding:	runPenny http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	runPenny http://soap.g-language.org/KBWS#runPenny
int ns1__runPenny(
    char*                               _in0,	///< Request parameter
    char*                              *_jobid	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * ns1__runDollop                                                             *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__runDollop" of service binding "KBWSSoapBinding"

/**

Operation details:

  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"
  - SOAP action="http://soap.g-language.org/KBWS#runDollop"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__runDollop(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    char*                               in0,
    // response parameters:
    char*                              *_jobid
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__runDollop(
    struct soap *soap,
    // request parameters:
    char*                               in0,
    // response parameters:
    char*                              *_jobid
  );
@endcode

*/

//gsoap ns1  service method-style:	runDollop rpc
//gsoap ns1  service method-encoding:	runDollop http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	runDollop http://soap.g-language.org/KBWS#runDollop
int ns1__runDollop(
    char*                               _in0,	///< Request parameter
    char*                              *_jobid	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * ns1__runDolpenny                                                           *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__runDolpenny" of service binding "KBWSSoapBinding"

/**

Operation details:

  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"
  - SOAP action="http://soap.g-language.org/KBWS#runDolpenny"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__runDolpenny(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    char*                               in0,
    // response parameters:
    char*                              *_jobid
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__runDolpenny(
    struct soap *soap,
    // request parameters:
    char*                               in0,
    // response parameters:
    char*                              *_jobid
  );
@endcode

*/

//gsoap ns1  service method-style:	runDolpenny rpc
//gsoap ns1  service method-encoding:	runDolpenny http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	runDolpenny http://soap.g-language.org/KBWS#runDolpenny
int ns1__runDolpenny(
    char*                               _in0,	///< Request parameter
    char*                              *_jobid	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * ns1__runPsort                                                              *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__runPsort" of service binding "KBWSSoapBinding"

/**

Operation details:

  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"
  - SOAP action="http://soap.g-language.org/KBWS#runPsort"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__runPsort(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    char*                               in0,
    struct ns1__psortInputParams*       params,
    // response parameters:
    char*                              *_jobid
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__runPsort(
    struct soap *soap,
    // request parameters:
    char*                               in0,
    struct ns1__psortInputParams*       params,
    // response parameters:
    char*                              *_jobid
  );
@endcode

*/

//gsoap ns1  service method-style:	runPsort rpc
//gsoap ns1  service method-encoding:	runPsort http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	runPsort http://soap.g-language.org/KBWS#runPsort
int ns1__runPsort(
    char*                               _in0,	///< Request parameter
    struct ns1__psortInputParams*       _params,	///< Request parameter
    char*                              *_jobid	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * ns1__runPsort2                                                             *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__runPsort2" of service binding "KBWSSoapBinding"

/**

Operation details:

  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"
  - SOAP action="http://soap.g-language.org/KBWS#runPsort2"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__runPsort2(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    char*                               in0,
    // response parameters:
    char*                              *_jobid
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__runPsort2(
    struct soap *soap,
    // request parameters:
    char*                               in0,
    // response parameters:
    char*                              *_jobid
  );
@endcode

*/

//gsoap ns1  service method-style:	runPsort2 rpc
//gsoap ns1  service method-encoding:	runPsort2 http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	runPsort2 http://soap.g-language.org/KBWS#runPsort2
int ns1__runPsort2(
    char*                               _in0,	///< Request parameter
    char*                              *_jobid	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * ns1__runPsortb                                                             *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__runPsortb" of service binding "KBWSSoapBinding"

/**

Operation details:

  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"
  - SOAP action="http://soap.g-language.org/KBWS#runPsortb"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__runPsortb(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    char*                               in0,
    struct ns1__psortbInputParams*      params,
    // response parameters:
    char*                              *_jobid
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__runPsortb(
    struct soap *soap,
    // request parameters:
    char*                               in0,
    struct ns1__psortbInputParams*      params,
    // response parameters:
    char*                              *_jobid
  );
@endcode

*/

//gsoap ns1  service method-style:	runPsortb rpc
//gsoap ns1  service method-encoding:	runPsortb http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	runPsortb http://soap.g-language.org/KBWS#runPsortb
int ns1__runPsortb(
    char*                               _in0,	///< Request parameter
    struct ns1__psortbInputParams*      _params,	///< Request parameter
    char*                              *_jobid	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * ns1__runSsearch                                                            *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__runSsearch" of service binding "KBWSSoapBinding"

/**

Operation details:

  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"
  - SOAP action="http://soap.g-language.org/KBWS#runSsearch"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__runSsearch(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    char*                               in0,
    struct ns1__ssearchInputParams*     params,
    // response parameters:
    char*                              *_jobid
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__runSsearch(
    struct soap *soap,
    // request parameters:
    char*                               in0,
    struct ns1__ssearchInputParams*     params,
    // response parameters:
    char*                              *_jobid
  );
@endcode

*/

//gsoap ns1  service method-style:	runSsearch rpc
//gsoap ns1  service method-encoding:	runSsearch http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	runSsearch http://soap.g-language.org/KBWS#runSsearch
int ns1__runSsearch(
    char*                               _in0,	///< Request parameter
    struct ns1__ssearchInputParams*     _params,	///< Request parameter
    char*                              *_jobid	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * ns1__runTcoffee                                                            *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__runTcoffee" of service binding "KBWSSoapBinding"

/**

Operation details:

  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"
  - SOAP action="http://soap.g-language.org/KBWS#runTcoffee"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__runTcoffee(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    char*                               in0,
    struct ns1__tcoffeeInputParams*     params,
    // response parameters:
    char*                              *_jobid
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__runTcoffee(
    struct soap *soap,
    // request parameters:
    char*                               in0,
    struct ns1__tcoffeeInputParams*     params,
    // response parameters:
    char*                              *_jobid
  );
@endcode

*/

//gsoap ns1  service method-style:	runTcoffee rpc
//gsoap ns1  service method-encoding:	runTcoffee http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	runTcoffee http://soap.g-language.org/KBWS#runTcoffee
int ns1__runTcoffee(
    char*                               _in0,	///< Request parameter
    struct ns1__tcoffeeInputParams*     _params,	///< Request parameter
    char*                              *_jobid	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * ns1__runtRNAscan                                                           *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__runtRNAscan" of service binding "KBWSSoapBinding"

/**

Operation details:

  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"
  - SOAP action="http://soap.g-language.org/KBWS#runtRNAscan"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__runtRNAscan(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    char*                               in0,
    struct ns1__tRNAscanInputParams*    params,
    // response parameters:
    char*                              *_jobid
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__runtRNAscan(
    struct soap *soap,
    // request parameters:
    char*                               in0,
    struct ns1__tRNAscanInputParams*    params,
    // response parameters:
    char*                              *_jobid
  );
@endcode

*/

//gsoap ns1  service method-style:	runtRNAscan rpc
//gsoap ns1  service method-encoding:	runtRNAscan http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	runtRNAscan http://soap.g-language.org/KBWS#runtRNAscan
int ns1__runtRNAscan(
    char*                               _in0,	///< Request parameter
    struct ns1__tRNAscanInputParams*    _params,	///< Request parameter
    char*                              *_jobid	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * ns1__runWeblogo                                                            *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__runWeblogo" of service binding "KBWSSoapBinding"

/**

Operation details:

  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"
  - SOAP action="http://soap.g-language.org/KBWS#runWeblogo"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__runWeblogo(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    char*                               in0,
    struct ns1__weblogoInputParams*     params,
    // response parameters:
    char*                              *_jobid
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__runWeblogo(
    struct soap *soap,
    // request parameters:
    char*                               in0,
    struct ns1__weblogoInputParams*     params,
    // response parameters:
    char*                              *_jobid
  );
@endcode

*/

//gsoap ns1  service method-style:	runWeblogo rpc
//gsoap ns1  service method-encoding:	runWeblogo http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	runWeblogo http://soap.g-language.org/KBWS#runWeblogo
int ns1__runWeblogo(
    char*                               _in0,	///< Request parameter
    struct ns1__weblogoInputParams*     _params,	///< Request parameter
    char*                              *_jobid	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * ns1__runWolfPsort                                                          *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__runWolfPsort" of service binding "KBWSSoapBinding"

/**

Operation details:

  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"
  - SOAP action="http://soap.g-language.org/KBWS#runWolfPsort"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__runWolfPsort(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    char*                               in0,
    struct ns1__wolfPsortInputParams*   params,
    // response parameters:
    char*                              *_jobid
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__runWolfPsort(
    struct soap *soap,
    // request parameters:
    char*                               in0,
    struct ns1__wolfPsortInputParams*   params,
    // response parameters:
    char*                              *_jobid
  );
@endcode

*/

//gsoap ns1  service method-style:	runWolfPsort rpc
//gsoap ns1  service method-encoding:	runWolfPsort http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	runWolfPsort http://soap.g-language.org/KBWS#runWolfPsort
int ns1__runWolfPsort(
    char*                               _in0,	///< Request parameter
    struct ns1__wolfPsortInputParams*   _params,	///< Request parameter
    char*                              *_jobid	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * ns1__runRNAfold                                                            *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__runRNAfold" of service binding "KBWSSoapBinding"

/**

Operation details:

  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"
  - SOAP action="http://soap.g-language.org/KBWS#runRNAfold"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__runRNAfold(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    char*                               in0,
    struct ns1__RNAfoldInputParams*     params,
    // response parameters:
    char*                              *_jobid
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__runRNAfold(
    struct soap *soap,
    // request parameters:
    char*                               in0,
    struct ns1__RNAfoldInputParams*     params,
    // response parameters:
    char*                              *_jobid
  );
@endcode

*/

//gsoap ns1  service method-style:	runRNAfold rpc
//gsoap ns1  service method-encoding:	runRNAfold http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	runRNAfold http://soap.g-language.org/KBWS#runRNAfold
int ns1__runRNAfold(
    char*                               _in0,	///< Request parameter
    struct ns1__RNAfoldInputParams*     _params,	///< Request parameter
    char*                              *_jobid	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * ns1__showBlastDB                                                           *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__showBlastDB" of service binding "KBWSSoapBinding"

/**

Operation details:

  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"
  - SOAP action="http://soap.g-language.org/KBWS#showBlastDB"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__showBlastDB(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct ns1__showBlastDBInputParams* params,
    // response parameters:
    char*                              *_dblist
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__showBlastDB(
    struct soap *soap,
    // request parameters:
    struct ns1__showBlastDBInputParams* params,
    // response parameters:
    char*                              *_dblist
  );
@endcode

*/

//gsoap ns1  service method-style:	showBlastDB rpc
//gsoap ns1  service method-encoding:	showBlastDB http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	showBlastDB http://soap.g-language.org/KBWS#showBlastDB
int ns1__showBlastDB(
    struct ns1__showBlastDBInputParams* _params,	///< Request parameter
    char*                              *_dblist	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * ns1__checkStatus                                                           *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__checkStatus" of service binding "KBWSSoapBinding"

/**

Operation details:

  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"
  - SOAP action="http://soap.g-language.org/KBWS#checkStatus"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__checkStatus(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    char*                               jobid,
    // response parameters:
    int                                *_status
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__checkStatus(
    struct soap *soap,
    // request parameters:
    char*                               jobid,
    // response parameters:
    int                                *_status
  );
@endcode

*/

//gsoap ns1  service method-style:	checkStatus rpc
//gsoap ns1  service method-encoding:	checkStatus http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	checkStatus http://soap.g-language.org/KBWS#checkStatus
int ns1__checkStatus(
    char*                               _jobid,	///< Request parameter
    int                                *_status	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * ns1__checkStatus_USCOREretJobid                                            *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__checkStatus_USCOREretJobid" of service binding "KBWSSoapBinding"

/**

Operation details:

  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"
  - SOAP action="http://soap.g-language.org/KBWS#checkStatus_retJobid"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__checkStatus_USCOREretJobid(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    char*                               jobid_USCOREin,
    // response parameters:
    char*                              *_jobid_USCOREout
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__checkStatus_USCOREretJobid(
    struct soap *soap,
    // request parameters:
    char*                               jobid_USCOREin,
    // response parameters:
    char*                              *_jobid_USCOREout
  );
@endcode

*/

//gsoap ns1  service method-style:	checkStatus_USCOREretJobid rpc
//gsoap ns1  service method-encoding:	checkStatus_USCOREretJobid http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	checkStatus_USCOREretJobid http://soap.g-language.org/KBWS#checkStatus_retJobid
int ns1__checkStatus_USCOREretJobid(
    char*                               _jobid_USCOREin,	///< Request parameter
    char*                              *_jobid_USCOREout	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * ns1__getResult                                                             *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__getResult" of service binding "KBWSSoapBinding"

/**

Operation details:

  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"
  - SOAP action="http://soap.g-language.org/KBWS#getResult"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__getResult(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    char*                               jobid,
    // response parameters:
    char*                              *_result
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__getResult(
    struct soap *soap,
    // request parameters:
    char*                               jobid,
    // response parameters:
    char*                              *_result
  );
@endcode

*/

//gsoap ns1  service method-style:	getResult rpc
//gsoap ns1  service method-encoding:	getResult http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	getResult http://soap.g-language.org/KBWS#getResult
int ns1__getResult(
    char*                               _jobid,	///< Request parameter
    char*                              *_result	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * ns1__getMultiResult                                                        *
 *                                                                            *
\******************************************************************************/


/// Operation "ns1__getMultiResult" of service binding "KBWSSoapBinding"

/**

Operation details:

  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"
  - SOAP action="http://soap.g-language.org/KBWS#getMultiResult"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__getMultiResult(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    char*                               jobid,
    char*                               type,
    // response parameters:
    char*                              *_result
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__getMultiResult(
    struct soap *soap,
    // request parameters:
    char*                               jobid,
    char*                               type,
    // response parameters:
    char*                              *_result
  );
@endcode

*/

//gsoap ns1  service method-style:	getMultiResult rpc
//gsoap ns1  service method-encoding:	getMultiResult http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	getMultiResult http://soap.g-language.org/KBWS#getMultiResult
int ns1__getMultiResult(
    char*                               _jobid,	///< Request parameter
    char*                               _type,	///< Request parameter
    char*                              *_result	///< Response parameter
);

/* End of kbws.h */
