/* soapStub.h
   Generated by gSOAP 2.7.13 from kbws.h
   Copyright(C) 2000-2009, Robert van Engelen, Genivia Inc. All Rights Reserved.
   This part of the software is released under one of the following licenses:
   GPL, the gSOAP public license, or Genivia's license for commercial use.
*/

#ifndef soapStub_H
#define soapStub_H
#include "stdsoap2.h"
#ifdef __cplusplus
extern "C" {
#endif

/******************************************************************************\
 *                                                                            *
 * Types with Custom Serializers                                              *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Enumerations                                                               *
 *                                                                            *
\******************************************************************************/


#ifndef SOAP_TYPE_xsd__boolean
#define SOAP_TYPE_xsd__boolean (7)
/* xsd:boolean */
enum xsd__boolean {xsd__boolean__false_ = 0, xsd__boolean__true_ = 1};
#endif

/******************************************************************************\
 *                                                                            *
 * Classes and Structs                                                        *
 *                                                                            *
\******************************************************************************/


#if 0 /* volatile type: do not redeclare here */

#endif

#ifndef SOAP_TYPE_ns1__blastInputParams
#define SOAP_TYPE_ns1__blastInputParams (8)
/* ns1:blastInputParams */
struct ns1__blastInputParams
{
	char *p;	/* required element of type xsd:string */
	char *d;	/* required element of type xsd:string */
	char *server;	/* required element of type xsd:string */
	float e;	/* required element of type xsd:float */
	char *m;	/* required element of type xsd:string */
	char *F;	/* required element of type xsd:string */
	int G;	/* required element of type xsd:int */
	int E;	/* required element of type xsd:int */
	char *X;	/* required element of type xsd:string */
	int q;	/* required element of type xsd:int */
	int r;	/* required element of type xsd:int */
	int v;	/* required element of type xsd:int */
	int b;	/* required element of type xsd:int */
	int f;	/* required element of type xsd:int */
	enum xsd__boolean g;	/* required element of type xsd:boolean */
	char *M;	/* required element of type xsd:string */
	int W;	/* required element of type xsd:int */
	float z;	/* required element of type xsd:float */
	int K;	/* required element of type xsd:int */
	float Y;	/* required element of type xsd:float */
};
#endif

#ifndef SOAP_TYPE_ns1__centroidfoldInputParams
#define SOAP_TYPE_ns1__centroidfoldInputParams (10)
/* ns1:centroidfoldInputParams */
struct ns1__centroidfoldInputParams
{
	char *model;	/* required element of type xsd:string */
	int gamma;	/* required element of type xsd:int */
};
#endif

#ifndef SOAP_TYPE_ns1__clustalwInputParams
#define SOAP_TYPE_ns1__clustalwInputParams (11)
/* ns1:clustalwInputParams */
struct ns1__clustalwInputParams
{
	char *alignment;	/* required element of type xsd:string */
	char *output;	/* required element of type xsd:string */
	char *matrix;	/* required element of type xsd:string */
	char *outorder;	/* required element of type xsd:string */
	int ktup;	/* required element of type xsd:int */
	int window;	/* required element of type xsd:int */
	int gapopen;	/* required element of type xsd:int */
	float gapext;	/* required element of type xsd:float */
	int gapdist;	/* required element of type xsd:int */
	enum xsd__boolean endgaps;	/* required element of type xsd:boolean */
	int pairgap;	/* required element of type xsd:int */
	int topdiags;	/* required element of type xsd:int */
	char *score;	/* required element of type xsd:string */
	enum xsd__boolean tossgaps;	/* required element of type xsd:boolean */
	enum xsd__boolean kimura;	/* required element of type xsd:boolean */
	char *outputtree;	/* required element of type xsd:string */
	enum xsd__boolean tree;	/* required element of type xsd:boolean */
	enum xsd__boolean quicktree;	/* required element of type xsd:boolean */
	enum xsd__boolean align;	/* required element of type xsd:boolean */
	char *clustering;	/* required element of type xsd:string */
	int numiter;	/* required element of type xsd:int */
	char *iteration;	/* required element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__fetchDataInputParams
#define SOAP_TYPE_ns1__fetchDataInputParams (12)
/* ns1:fetchDataInputParams */
struct ns1__fetchDataInputParams
{
	char *format;	/* required element of type xsd:string */
	char *style;	/* required element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__fetchBatchInputParams
#define SOAP_TYPE_ns1__fetchBatchInputParams (13)
/* ns1:fetchBatchInputParams */
struct ns1__fetchBatchInputParams
{
	char *format;	/* required element of type xsd:string */
	char *style;	/* required element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__genemarkhmmInputParams
#define SOAP_TYPE_ns1__genemarkhmmInputParams (14)
/* ns1:genemarkhmmInputParams */
struct ns1__genemarkhmmInputParams
{
	char *title;	/* required element of type xsd:string */
	enum xsd__boolean rbs;	/* required element of type xsd:boolean */
	enum xsd__boolean list;	/* required element of type xsd:boolean */
	char *org;	/* required element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__glimmerInputParams
#define SOAP_TYPE_ns1__glimmerInputParams (15)
/* ns1:glimmerInputParams */
struct ns1__glimmerInputParams
{
	int gencode;	/* required element of type xsd:int */
	char *topology;	/* required element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__kalignInputParams
#define SOAP_TYPE_ns1__kalignInputParams (16)
/* ns1:kalignInputParams */
struct ns1__kalignInputParams
{
	char *moltype;	/* required element of type xsd:string */
	float gpo;	/* required element of type xsd:float */
	float gpe;	/* required element of type xsd:float */
	float tgpe;	/* required element of type xsd:float */
	float bonus;	/* required element of type xsd:float */
};
#endif

#ifndef SOAP_TYPE_ns1__mafftInputParams
#define SOAP_TYPE_ns1__mafftInputParams (17)
/* ns1:mafftInputParams */
struct ns1__mafftInputParams
{
	char *strategy;	/* required element of type xsd:string */
	char *outorder;	/* required element of type xsd:string */
	float op;	/* required element of type xsd:float */
	float ep;	/* required element of type xsd:float */
	char *scorematrix;	/* required element of type xsd:string */
	enum xsd__boolean homologs;	/* required element of type xsd:boolean */
	enum xsd__boolean showhomologs;	/* required element of type xsd:boolean */
	int numhomologs;	/* required element of type xsd:int */
	float threshold;	/* required element of type xsd:float */
	char *referenceseq;	/* required element of type xsd:string */
	char *harrplot;	/* required element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__muscleInputParams
#define SOAP_TYPE_ns1__muscleInputParams (18)
/* ns1:muscleInputParams */
struct ns1__muscleInputParams
{
	char *output;	/* required element of type xsd:string */
	char *outputtree;	/* required element of type xsd:string */
	int maxiters;	/* required element of type xsd:int */
	enum xsd__boolean diags;	/* required element of type xsd:boolean */
};
#endif

#ifndef SOAP_TYPE_ns1__phobiusInputParams
#define SOAP_TYPE_ns1__phobiusInputParams (19)
/* ns1:phobiusInputParams */
struct ns1__phobiusInputParams
{
	char *outputformat;	/* required element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__psortInputParams
#define SOAP_TYPE_ns1__psortInputParams (20)
/* ns1:psortInputParams */
struct ns1__psortInputParams
{
	char *org;	/* required element of type xsd:string */
	char *title;	/* required element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__psortbInputParams
#define SOAP_TYPE_ns1__psortbInputParams (21)
/* ns1:psortbInputParams */
struct ns1__psortbInputParams
{
	char *format;	/* required element of type xsd:string */
	char *gram;	/* required element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__tcoffeeInputParams
#define SOAP_TYPE_ns1__tcoffeeInputParams (22)
/* ns1:tcoffeeInputParams */
struct ns1__tcoffeeInputParams
{
	char *matrix;	/* required element of type xsd:string */
	char *outorder;	/* required element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__tRNAscanInputParams
#define SOAP_TYPE_ns1__tRNAscanInputParams (23)
/* ns1:tRNAscanInputParams */
struct ns1__tRNAscanInputParams
{
	char *title;	/* required element of type xsd:string */
	char *mode;	/* required element of type xsd:string */
	char *source;	/* required element of type xsd:string */
	char *gcode;	/* required element of type xsd:string */
	enum xsd__boolean pesudogene;	/* required element of type xsd:boolean */
	enum xsd__boolean origin;	/* required element of type xsd:boolean */
	enum xsd__boolean ace;	/* required element of type xsd:boolean */
	enum xsd__boolean codons;	/* required element of type xsd:boolean */
	enum xsd__boolean fpos;	/* required element of type xsd:boolean */
	enum xsd__boolean breakdown;	/* required element of type xsd:boolean */
	char *covescore;	/* required element of type xsd:string */
	char *euparams;	/* required element of type xsd:string */
	char *euscore;	/* required element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__ssearchInputParams
#define SOAP_TYPE_ns1__ssearchInputParams (24)
/* ns1:ssearchInputParams */
struct ns1__ssearchInputParams
{
	char *d;	/* required element of type xsd:string */
	char *moltype;	/* required element of type xsd:string */
	enum xsd__boolean histogram;	/* required element of type xsd:boolean */
	enum xsd__boolean nucleotide;	/* required element of type xsd:boolean */
	enum xsd__boolean topstrand;	/* required element of type xsd:boolean */
	enum xsd__boolean bottomstrand;	/* required element of type xsd:boolean */
	int gapopen;	/* required element of type xsd:int */
	int gapext;	/* required element of type xsd:int */
	int scores;	/* required element of type xsd:int */
	int alignments;	/* required element of type xsd:int */
	int ktup;	/* required element of type xsd:int */
	char *matrix;	/* required element of type xsd:string */
	float eupper;	/* required element of type xsd:float */
	float elower;	/* required element of type xsd:float */
	char *dbrange;	/* required element of type xsd:string */
	char *seqrange;	/* required element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__weblogoInputParams
#define SOAP_TYPE_ns1__weblogoInputParams (25)
/* ns1:weblogoInputParams */
struct ns1__weblogoInputParams
{
	char *format;	/* required element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__wolfPsortInputParams
#define SOAP_TYPE_ns1__wolfPsortInputParams (26)
/* ns1:wolfPsortInputParams */
struct ns1__wolfPsortInputParams
{
	char *org;	/* required element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__RNAfoldInputParams
#define SOAP_TYPE_ns1__RNAfoldInputParams (27)
/* ns1:RNAfoldInputParams */
struct ns1__RNAfoldInputParams
{
	char *method;	/* required element of type xsd:string */
	enum xsd__boolean noclosegu;	/* required element of type xsd:boolean */
	enum xsd__boolean nolp;	/* required element of type xsd:boolean */
	char *dangling;	/* required element of type xsd:string */
	char *param;	/* required element of type xsd:string */
	int tmp;	/* required element of type xsd:int */
	enum xsd__boolean circ;	/* required element of type xsd:boolean */
};
#endif

#ifndef SOAP_TYPE_ns1__showBlastDBInputParams
#define SOAP_TYPE_ns1__showBlastDBInputParams (28)
/* ns1:showBlastDBInputParams */
struct ns1__showBlastDBInputParams
{
	enum xsd__boolean nucleotide;	/* required element of type xsd:boolean */
	enum xsd__boolean protein;	/* required element of type xsd:boolean */
};
#endif

#ifndef SOAP_TYPE_ns1__runBlastResponse
#define SOAP_TYPE_ns1__runBlastResponse (32)
/* ns1:runBlastResponse */
struct ns1__runBlastResponse
{
	char **_jobid;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__runBlast
#define SOAP_TYPE_ns1__runBlast (33)
/* ns1:runBlast */
struct ns1__runBlast
{
	char *_in0;	/* optional element of type xsd:string */
	struct ns1__blastInputParams *_params;	/* optional element of type ns1:blastInputParams */
};
#endif

#ifndef SOAP_TYPE_ns1__runCentroidfoldResponse
#define SOAP_TYPE_ns1__runCentroidfoldResponse (36)
/* ns1:runCentroidfoldResponse */
struct ns1__runCentroidfoldResponse
{
	char **_jobid;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__runCentroidfold
#define SOAP_TYPE_ns1__runCentroidfold (37)
/* ns1:runCentroidfold */
struct ns1__runCentroidfold
{
	char *_in0;	/* optional element of type xsd:string */
	struct ns1__centroidfoldInputParams *_params;	/* optional element of type ns1:centroidfoldInputParams */
};
#endif

#ifndef SOAP_TYPE_ns1__runClustalwResponse
#define SOAP_TYPE_ns1__runClustalwResponse (40)
/* ns1:runClustalwResponse */
struct ns1__runClustalwResponse
{
	char **_jobid;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__runClustalw
#define SOAP_TYPE_ns1__runClustalw (41)
/* ns1:runClustalw */
struct ns1__runClustalw
{
	char *_in0;	/* optional element of type xsd:string */
	struct ns1__clustalwInputParams *_params;	/* optional element of type ns1:clustalwInputParams */
};
#endif

#ifndef SOAP_TYPE_ns1__runFetchDataResponse
#define SOAP_TYPE_ns1__runFetchDataResponse (44)
/* ns1:runFetchDataResponse */
struct ns1__runFetchDataResponse
{
	char **_jobid;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__runFetchData
#define SOAP_TYPE_ns1__runFetchData (45)
/* ns1:runFetchData */
struct ns1__runFetchData
{
	char *_in0;	/* optional element of type xsd:string */
	struct ns1__fetchDataInputParams *_params;	/* optional element of type ns1:fetchDataInputParams */
};
#endif

#ifndef SOAP_TYPE_ns1__runFetchBatchResponse
#define SOAP_TYPE_ns1__runFetchBatchResponse (48)
/* ns1:runFetchBatchResponse */
struct ns1__runFetchBatchResponse
{
	char **_jobid;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__runFetchBatch
#define SOAP_TYPE_ns1__runFetchBatch (49)
/* ns1:runFetchBatch */
struct ns1__runFetchBatch
{
	char *_in0;	/* optional element of type xsd:string */
	char *_in1;	/* optional element of type xsd:string */
	struct ns1__fetchBatchInputParams *_params;	/* optional element of type ns1:fetchBatchInputParams */
};
#endif

#ifndef SOAP_TYPE_ns1__runGenemarkhmmResponse
#define SOAP_TYPE_ns1__runGenemarkhmmResponse (52)
/* ns1:runGenemarkhmmResponse */
struct ns1__runGenemarkhmmResponse
{
	char **_jobid;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__runGenemarkhmm
#define SOAP_TYPE_ns1__runGenemarkhmm (53)
/* ns1:runGenemarkhmm */
struct ns1__runGenemarkhmm
{
	char *_in0;	/* optional element of type xsd:string */
	struct ns1__genemarkhmmInputParams *_params;	/* optional element of type ns1:genemarkhmmInputParams */
};
#endif

#ifndef SOAP_TYPE_ns1__runGlimmerResponse
#define SOAP_TYPE_ns1__runGlimmerResponse (56)
/* ns1:runGlimmerResponse */
struct ns1__runGlimmerResponse
{
	char **_jobid;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__runGlimmer
#define SOAP_TYPE_ns1__runGlimmer (57)
/* ns1:runGlimmer */
struct ns1__runGlimmer
{
	char *_in0;	/* optional element of type xsd:string */
	struct ns1__glimmerInputParams *_params;	/* optional element of type ns1:glimmerInputParams */
};
#endif

#ifndef SOAP_TYPE_ns1__runKalignResponse
#define SOAP_TYPE_ns1__runKalignResponse (60)
/* ns1:runKalignResponse */
struct ns1__runKalignResponse
{
	char **_jobid;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__runKalign
#define SOAP_TYPE_ns1__runKalign (61)
/* ns1:runKalign */
struct ns1__runKalign
{
	char *_in0;	/* optional element of type xsd:string */
	struct ns1__kalignInputParams *_params;	/* optional element of type ns1:kalignInputParams */
};
#endif

#ifndef SOAP_TYPE_ns1__runMafftResponse
#define SOAP_TYPE_ns1__runMafftResponse (64)
/* ns1:runMafftResponse */
struct ns1__runMafftResponse
{
	char **_jobid;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__runMafft
#define SOAP_TYPE_ns1__runMafft (65)
/* ns1:runMafft */
struct ns1__runMafft
{
	char *_in0;	/* optional element of type xsd:string */
	struct ns1__mafftInputParams *_params;	/* optional element of type ns1:mafftInputParams */
};
#endif

#ifndef SOAP_TYPE_ns1__runMuscleResponse
#define SOAP_TYPE_ns1__runMuscleResponse (68)
/* ns1:runMuscleResponse */
struct ns1__runMuscleResponse
{
	char **_jobid;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__runMuscle
#define SOAP_TYPE_ns1__runMuscle (69)
/* ns1:runMuscle */
struct ns1__runMuscle
{
	char *_in0;	/* optional element of type xsd:string */
	struct ns1__muscleInputParams *_params;	/* optional element of type ns1:muscleInputParams */
};
#endif

#ifndef SOAP_TYPE_ns1__runPhobiusResponse
#define SOAP_TYPE_ns1__runPhobiusResponse (72)
/* ns1:runPhobiusResponse */
struct ns1__runPhobiusResponse
{
	char **_jobid;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__runPhobius
#define SOAP_TYPE_ns1__runPhobius (73)
/* ns1:runPhobius */
struct ns1__runPhobius
{
	char *_in0;	/* optional element of type xsd:string */
	struct ns1__phobiusInputParams *_params;	/* optional element of type ns1:phobiusInputParams */
};
#endif

#ifndef SOAP_TYPE_ns1__runProtparsResponse
#define SOAP_TYPE_ns1__runProtparsResponse (75)
/* ns1:runProtparsResponse */
struct ns1__runProtparsResponse
{
	char **_jobid;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__runProtpars
#define SOAP_TYPE_ns1__runProtpars (76)
/* ns1:runProtpars */
struct ns1__runProtpars
{
	char *_in0;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__runProtdistResponse
#define SOAP_TYPE_ns1__runProtdistResponse (78)
/* ns1:runProtdistResponse */
struct ns1__runProtdistResponse
{
	char **_jobid;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__runProtdist
#define SOAP_TYPE_ns1__runProtdist (79)
/* ns1:runProtdist */
struct ns1__runProtdist
{
	char *_in0;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__runDnaparsResponse
#define SOAP_TYPE_ns1__runDnaparsResponse (81)
/* ns1:runDnaparsResponse */
struct ns1__runDnaparsResponse
{
	char **_jobid;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__runDnapars
#define SOAP_TYPE_ns1__runDnapars (82)
/* ns1:runDnapars */
struct ns1__runDnapars
{
	char *_in0;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__runDnapennyResponse
#define SOAP_TYPE_ns1__runDnapennyResponse (84)
/* ns1:runDnapennyResponse */
struct ns1__runDnapennyResponse
{
	char **_jobid;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__runDnapenny
#define SOAP_TYPE_ns1__runDnapenny (85)
/* ns1:runDnapenny */
struct ns1__runDnapenny
{
	char *_in0;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__runDnacompResponse
#define SOAP_TYPE_ns1__runDnacompResponse (87)
/* ns1:runDnacompResponse */
struct ns1__runDnacompResponse
{
	char **_jobid;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__runDnacomp
#define SOAP_TYPE_ns1__runDnacomp (88)
/* ns1:runDnacomp */
struct ns1__runDnacomp
{
	char *_in0;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__runDnainvarResponse
#define SOAP_TYPE_ns1__runDnainvarResponse (90)
/* ns1:runDnainvarResponse */
struct ns1__runDnainvarResponse
{
	char **_jobid;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__runDnainvar
#define SOAP_TYPE_ns1__runDnainvar (91)
/* ns1:runDnainvar */
struct ns1__runDnainvar
{
	char *_in0;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__runDnamlResponse
#define SOAP_TYPE_ns1__runDnamlResponse (93)
/* ns1:runDnamlResponse */
struct ns1__runDnamlResponse
{
	char **_jobid;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__runDnaml
#define SOAP_TYPE_ns1__runDnaml (94)
/* ns1:runDnaml */
struct ns1__runDnaml
{
	char *_in0;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__runDnamlkResponse
#define SOAP_TYPE_ns1__runDnamlkResponse (96)
/* ns1:runDnamlkResponse */
struct ns1__runDnamlkResponse
{
	char **_jobid;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__runDnamlk
#define SOAP_TYPE_ns1__runDnamlk (97)
/* ns1:runDnamlk */
struct ns1__runDnamlk
{
	char *_in0;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__runDnadistResponse
#define SOAP_TYPE_ns1__runDnadistResponse (99)
/* ns1:runDnadistResponse */
struct ns1__runDnadistResponse
{
	char **_jobid;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__runDnadist
#define SOAP_TYPE_ns1__runDnadist (100)
/* ns1:runDnadist */
struct ns1__runDnadist
{
	char *_in0;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__runGendistResponse
#define SOAP_TYPE_ns1__runGendistResponse (102)
/* ns1:runGendistResponse */
struct ns1__runGendistResponse
{
	char **_jobid;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__runGendist
#define SOAP_TYPE_ns1__runGendist (103)
/* ns1:runGendist */
struct ns1__runGendist
{
	char *_in0;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__runSeqbootResponse
#define SOAP_TYPE_ns1__runSeqbootResponse (105)
/* ns1:runSeqbootResponse */
struct ns1__runSeqbootResponse
{
	char **_jobid;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__runSeqboot
#define SOAP_TYPE_ns1__runSeqboot (106)
/* ns1:runSeqboot */
struct ns1__runSeqboot
{
	char *_in0;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__runRestmlResponse
#define SOAP_TYPE_ns1__runRestmlResponse (108)
/* ns1:runRestmlResponse */
struct ns1__runRestmlResponse
{
	char **_jobid;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__runRestml
#define SOAP_TYPE_ns1__runRestml (109)
/* ns1:runRestml */
struct ns1__runRestml
{
	char *_in0;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__runCliqueResponse
#define SOAP_TYPE_ns1__runCliqueResponse (111)
/* ns1:runCliqueResponse */
struct ns1__runCliqueResponse
{
	char **_jobid;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__runClique
#define SOAP_TYPE_ns1__runClique (112)
/* ns1:runClique */
struct ns1__runClique
{
	char *_in0;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__runFitchResponse
#define SOAP_TYPE_ns1__runFitchResponse (114)
/* ns1:runFitchResponse */
struct ns1__runFitchResponse
{
	char **_jobid;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__runFitch
#define SOAP_TYPE_ns1__runFitch (115)
/* ns1:runFitch */
struct ns1__runFitch
{
	char *_in0;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__runKitschResponse
#define SOAP_TYPE_ns1__runKitschResponse (117)
/* ns1:runKitschResponse */
struct ns1__runKitschResponse
{
	char **_jobid;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__runKitsch
#define SOAP_TYPE_ns1__runKitsch (118)
/* ns1:runKitsch */
struct ns1__runKitsch
{
	char *_in0;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__runNeighborResponse
#define SOAP_TYPE_ns1__runNeighborResponse (120)
/* ns1:runNeighborResponse */
struct ns1__runNeighborResponse
{
	char **_jobid;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__runNeighbor
#define SOAP_TYPE_ns1__runNeighbor (121)
/* ns1:runNeighbor */
struct ns1__runNeighbor
{
	char *_in0;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__runContmlResponse
#define SOAP_TYPE_ns1__runContmlResponse (123)
/* ns1:runContmlResponse */
struct ns1__runContmlResponse
{
	char **_jobid;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__runContml
#define SOAP_TYPE_ns1__runContml (124)
/* ns1:runContml */
struct ns1__runContml
{
	char *_in0;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__runMixResponse
#define SOAP_TYPE_ns1__runMixResponse (126)
/* ns1:runMixResponse */
struct ns1__runMixResponse
{
	char **_jobid;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__runMix
#define SOAP_TYPE_ns1__runMix (127)
/* ns1:runMix */
struct ns1__runMix
{
	char *_in0;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__runPennyResponse
#define SOAP_TYPE_ns1__runPennyResponse (129)
/* ns1:runPennyResponse */
struct ns1__runPennyResponse
{
	char **_jobid;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__runPenny
#define SOAP_TYPE_ns1__runPenny (130)
/* ns1:runPenny */
struct ns1__runPenny
{
	char *_in0;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__runDollopResponse
#define SOAP_TYPE_ns1__runDollopResponse (132)
/* ns1:runDollopResponse */
struct ns1__runDollopResponse
{
	char **_jobid;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__runDollop
#define SOAP_TYPE_ns1__runDollop (133)
/* ns1:runDollop */
struct ns1__runDollop
{
	char *_in0;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__runDolpennyResponse
#define SOAP_TYPE_ns1__runDolpennyResponse (135)
/* ns1:runDolpennyResponse */
struct ns1__runDolpennyResponse
{
	char **_jobid;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__runDolpenny
#define SOAP_TYPE_ns1__runDolpenny (136)
/* ns1:runDolpenny */
struct ns1__runDolpenny
{
	char *_in0;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__runPsortResponse
#define SOAP_TYPE_ns1__runPsortResponse (139)
/* ns1:runPsortResponse */
struct ns1__runPsortResponse
{
	char **_jobid;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__runPsort
#define SOAP_TYPE_ns1__runPsort (140)
/* ns1:runPsort */
struct ns1__runPsort
{
	char *_in0;	/* optional element of type xsd:string */
	struct ns1__psortInputParams *_params;	/* optional element of type ns1:psortInputParams */
};
#endif

#ifndef SOAP_TYPE_ns1__runPsort2Response
#define SOAP_TYPE_ns1__runPsort2Response (142)
/* ns1:runPsort2Response */
struct ns1__runPsort2Response
{
	char **_jobid;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__runPsort2
#define SOAP_TYPE_ns1__runPsort2 (143)
/* ns1:runPsort2 */
struct ns1__runPsort2
{
	char *_in0;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__runPsortbResponse
#define SOAP_TYPE_ns1__runPsortbResponse (146)
/* ns1:runPsortbResponse */
struct ns1__runPsortbResponse
{
	char **_jobid;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__runPsortb
#define SOAP_TYPE_ns1__runPsortb (147)
/* ns1:runPsortb */
struct ns1__runPsortb
{
	char *_in0;	/* optional element of type xsd:string */
	struct ns1__psortbInputParams *_params;	/* optional element of type ns1:psortbInputParams */
};
#endif

#ifndef SOAP_TYPE_ns1__runSsearchResponse
#define SOAP_TYPE_ns1__runSsearchResponse (150)
/* ns1:runSsearchResponse */
struct ns1__runSsearchResponse
{
	char **_jobid;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__runSsearch
#define SOAP_TYPE_ns1__runSsearch (151)
/* ns1:runSsearch */
struct ns1__runSsearch
{
	char *_in0;	/* optional element of type xsd:string */
	struct ns1__ssearchInputParams *_params;	/* optional element of type ns1:ssearchInputParams */
};
#endif

#ifndef SOAP_TYPE_ns1__runTcoffeeResponse
#define SOAP_TYPE_ns1__runTcoffeeResponse (154)
/* ns1:runTcoffeeResponse */
struct ns1__runTcoffeeResponse
{
	char **_jobid;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__runTcoffee
#define SOAP_TYPE_ns1__runTcoffee (155)
/* ns1:runTcoffee */
struct ns1__runTcoffee
{
	char *_in0;	/* optional element of type xsd:string */
	struct ns1__tcoffeeInputParams *_params;	/* optional element of type ns1:tcoffeeInputParams */
};
#endif

#ifndef SOAP_TYPE_ns1__runtRNAscanResponse
#define SOAP_TYPE_ns1__runtRNAscanResponse (158)
/* ns1:runtRNAscanResponse */
struct ns1__runtRNAscanResponse
{
	char **_jobid;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__runtRNAscan
#define SOAP_TYPE_ns1__runtRNAscan (159)
/* ns1:runtRNAscan */
struct ns1__runtRNAscan
{
	char *_in0;	/* optional element of type xsd:string */
	struct ns1__tRNAscanInputParams *_params;	/* optional element of type ns1:tRNAscanInputParams */
};
#endif

#ifndef SOAP_TYPE_ns1__runWeblogoResponse
#define SOAP_TYPE_ns1__runWeblogoResponse (162)
/* ns1:runWeblogoResponse */
struct ns1__runWeblogoResponse
{
	char **_jobid;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__runWeblogo
#define SOAP_TYPE_ns1__runWeblogo (163)
/* ns1:runWeblogo */
struct ns1__runWeblogo
{
	char *_in0;	/* optional element of type xsd:string */
	struct ns1__weblogoInputParams *_params;	/* optional element of type ns1:weblogoInputParams */
};
#endif

#ifndef SOAP_TYPE_ns1__runWolfPsortResponse
#define SOAP_TYPE_ns1__runWolfPsortResponse (166)
/* ns1:runWolfPsortResponse */
struct ns1__runWolfPsortResponse
{
	char **_jobid;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__runWolfPsort
#define SOAP_TYPE_ns1__runWolfPsort (167)
/* ns1:runWolfPsort */
struct ns1__runWolfPsort
{
	char *_in0;	/* optional element of type xsd:string */
	struct ns1__wolfPsortInputParams *_params;	/* optional element of type ns1:wolfPsortInputParams */
};
#endif

#ifndef SOAP_TYPE_ns1__runRNAfoldResponse
#define SOAP_TYPE_ns1__runRNAfoldResponse (170)
/* ns1:runRNAfoldResponse */
struct ns1__runRNAfoldResponse
{
	char **_jobid;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__runRNAfold
#define SOAP_TYPE_ns1__runRNAfold (171)
/* ns1:runRNAfold */
struct ns1__runRNAfold
{
	char *_in0;	/* optional element of type xsd:string */
	struct ns1__RNAfoldInputParams *_params;	/* optional element of type ns1:RNAfoldInputParams */
};
#endif

#ifndef SOAP_TYPE_ns1__showBlastDBResponse
#define SOAP_TYPE_ns1__showBlastDBResponse (174)
/* ns1:showBlastDBResponse */
struct ns1__showBlastDBResponse
{
	char **_dblist;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__showBlastDB
#define SOAP_TYPE_ns1__showBlastDB (175)
/* ns1:showBlastDB */
struct ns1__showBlastDB
{
	struct ns1__showBlastDBInputParams *_params;	/* optional element of type ns1:showBlastDBInputParams */
};
#endif

#ifndef SOAP_TYPE_ns1__map2PathwayProjectorResponse
#define SOAP_TYPE_ns1__map2PathwayProjectorResponse (177)
/* ns1:map2PathwayProjectorResponse */
struct ns1__map2PathwayProjectorResponse
{
	char **_jobid;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__map2PathwayProjector
#define SOAP_TYPE_ns1__map2PathwayProjector (178)
/* ns1:map2PathwayProjector */
struct ns1__map2PathwayProjector
{
	char *_in0;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__checkStatusResponse
#define SOAP_TYPE_ns1__checkStatusResponse (181)
/* ns1:checkStatusResponse */
struct ns1__checkStatusResponse
{
	int *_status;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:int */
};
#endif

#ifndef SOAP_TYPE_ns1__checkStatus
#define SOAP_TYPE_ns1__checkStatus (182)
/* ns1:checkStatus */
struct ns1__checkStatus
{
	char *_jobid;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__checkStatus_USCOREretJobidResponse
#define SOAP_TYPE_ns1__checkStatus_USCOREretJobidResponse (184)
/* ns1:checkStatus_retJobidResponse */
struct ns1__checkStatus_USCOREretJobidResponse
{
	char **_jobid_USCOREout;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__checkStatus_USCOREretJobid
#define SOAP_TYPE_ns1__checkStatus_USCOREretJobid (185)
/* ns1:checkStatus_retJobid */
struct ns1__checkStatus_USCOREretJobid
{
	char *_jobid_USCOREin;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__getResultResponse
#define SOAP_TYPE_ns1__getResultResponse (187)
/* ns1:getResultResponse */
struct ns1__getResultResponse
{
	char **_result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__getResult
#define SOAP_TYPE_ns1__getResult (188)
/* ns1:getResult */
struct ns1__getResult
{
	char *_jobid;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__getMultiResultResponse
#define SOAP_TYPE_ns1__getMultiResultResponse (190)
/* ns1:getMultiResultResponse */
struct ns1__getMultiResultResponse
{
	char **_result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__getMultiResult
#define SOAP_TYPE_ns1__getMultiResult (191)
/* ns1:getMultiResult */
struct ns1__getMultiResult
{
	char *_jobid;	/* optional element of type xsd:string */
	char *_type;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (192)
/* SOAP Header: */
struct SOAP_ENV__Header
{
#ifdef WITH_NOEMPTYSTRUCT
	char dummy;	/* dummy member to enable compilation */
#endif
};
#endif

#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (193)
/* SOAP Fault Code: */
struct SOAP_ENV__Code
{
	char *SOAP_ENV__Value;	/* optional element of type xsd:QName */
	struct SOAP_ENV__Code *SOAP_ENV__Subcode;	/* optional element of type SOAP-ENV:Code */
};
#endif

#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (195)
/* SOAP-ENV:Detail */
struct SOAP_ENV__Detail
{
	int __type;	/* any type of element <fault> (defined below) */
	void *fault;	/* transient */
	char *__any;
};
#endif

#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (198)
/* SOAP-ENV:Reason */
struct SOAP_ENV__Reason
{
	char *SOAP_ENV__Text;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (199)
/* SOAP Fault: */
struct SOAP_ENV__Fault
{
	char *faultcode;	/* optional element of type xsd:QName */
	char *faultstring;	/* optional element of type xsd:string */
	char *faultactor;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *detail;	/* optional element of type SOAP-ENV:Detail */
	struct SOAP_ENV__Code *SOAP_ENV__Code;	/* optional element of type SOAP-ENV:Code */
	struct SOAP_ENV__Reason *SOAP_ENV__Reason;	/* optional element of type SOAP-ENV:Reason */
	char *SOAP_ENV__Node;	/* optional element of type xsd:string */
	char *SOAP_ENV__Role;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *SOAP_ENV__Detail;	/* optional element of type SOAP-ENV:Detail */
};
#endif

/******************************************************************************\
 *                                                                            *
 * Typedefs                                                                   *
 *                                                                            *
\******************************************************************************/

#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
typedef char *_QName;
#endif

#ifndef SOAP_TYPE__XML
#define SOAP_TYPE__XML (6)
typedef char *_XML;
#endif


/******************************************************************************\
 *                                                                            *
 * Externals                                                                  *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operations                                                         *
 *                                                                            *
\******************************************************************************/


SOAP_FMAC5 int SOAP_FMAC6 ns1__runBlast(struct soap*, char *_in0, struct ns1__blastInputParams *_params, char **_jobid);

SOAP_FMAC5 int SOAP_FMAC6 ns1__runCentroidfold(struct soap*, char *_in0, struct ns1__centroidfoldInputParams *_params, char **_jobid);

SOAP_FMAC5 int SOAP_FMAC6 ns1__runClustalw(struct soap*, char *_in0, struct ns1__clustalwInputParams *_params, char **_jobid);

SOAP_FMAC5 int SOAP_FMAC6 ns1__runFetchData(struct soap*, char *_in0, struct ns1__fetchDataInputParams *_params, char **_jobid);

SOAP_FMAC5 int SOAP_FMAC6 ns1__runFetchBatch(struct soap*, char *_in0, char *_in1, struct ns1__fetchBatchInputParams *_params, char **_jobid);

SOAP_FMAC5 int SOAP_FMAC6 ns1__runGenemarkhmm(struct soap*, char *_in0, struct ns1__genemarkhmmInputParams *_params, char **_jobid);

SOAP_FMAC5 int SOAP_FMAC6 ns1__runGlimmer(struct soap*, char *_in0, struct ns1__glimmerInputParams *_params, char **_jobid);

SOAP_FMAC5 int SOAP_FMAC6 ns1__runKalign(struct soap*, char *_in0, struct ns1__kalignInputParams *_params, char **_jobid);

SOAP_FMAC5 int SOAP_FMAC6 ns1__runMafft(struct soap*, char *_in0, struct ns1__mafftInputParams *_params, char **_jobid);

SOAP_FMAC5 int SOAP_FMAC6 ns1__runMuscle(struct soap*, char *_in0, struct ns1__muscleInputParams *_params, char **_jobid);

SOAP_FMAC5 int SOAP_FMAC6 ns1__runPhobius(struct soap*, char *_in0, struct ns1__phobiusInputParams *_params, char **_jobid);

SOAP_FMAC5 int SOAP_FMAC6 ns1__runProtpars(struct soap*, char *_in0, char **_jobid);

SOAP_FMAC5 int SOAP_FMAC6 ns1__runProtdist(struct soap*, char *_in0, char **_jobid);

SOAP_FMAC5 int SOAP_FMAC6 ns1__runDnapars(struct soap*, char *_in0, char **_jobid);

SOAP_FMAC5 int SOAP_FMAC6 ns1__runDnapenny(struct soap*, char *_in0, char **_jobid);

SOAP_FMAC5 int SOAP_FMAC6 ns1__runDnacomp(struct soap*, char *_in0, char **_jobid);

SOAP_FMAC5 int SOAP_FMAC6 ns1__runDnainvar(struct soap*, char *_in0, char **_jobid);

SOAP_FMAC5 int SOAP_FMAC6 ns1__runDnaml(struct soap*, char *_in0, char **_jobid);

SOAP_FMAC5 int SOAP_FMAC6 ns1__runDnamlk(struct soap*, char *_in0, char **_jobid);

SOAP_FMAC5 int SOAP_FMAC6 ns1__runDnadist(struct soap*, char *_in0, char **_jobid);

SOAP_FMAC5 int SOAP_FMAC6 ns1__runGendist(struct soap*, char *_in0, char **_jobid);

SOAP_FMAC5 int SOAP_FMAC6 ns1__runSeqboot(struct soap*, char *_in0, char **_jobid);

SOAP_FMAC5 int SOAP_FMAC6 ns1__runRestml(struct soap*, char *_in0, char **_jobid);

SOAP_FMAC5 int SOAP_FMAC6 ns1__runClique(struct soap*, char *_in0, char **_jobid);

SOAP_FMAC5 int SOAP_FMAC6 ns1__runFitch(struct soap*, char *_in0, char **_jobid);

SOAP_FMAC5 int SOAP_FMAC6 ns1__runKitsch(struct soap*, char *_in0, char **_jobid);

SOAP_FMAC5 int SOAP_FMAC6 ns1__runNeighbor(struct soap*, char *_in0, char **_jobid);

SOAP_FMAC5 int SOAP_FMAC6 ns1__runContml(struct soap*, char *_in0, char **_jobid);

SOAP_FMAC5 int SOAP_FMAC6 ns1__runMix(struct soap*, char *_in0, char **_jobid);

SOAP_FMAC5 int SOAP_FMAC6 ns1__runPenny(struct soap*, char *_in0, char **_jobid);

SOAP_FMAC5 int SOAP_FMAC6 ns1__runDollop(struct soap*, char *_in0, char **_jobid);

SOAP_FMAC5 int SOAP_FMAC6 ns1__runDolpenny(struct soap*, char *_in0, char **_jobid);

SOAP_FMAC5 int SOAP_FMAC6 ns1__runPsort(struct soap*, char *_in0, struct ns1__psortInputParams *_params, char **_jobid);

SOAP_FMAC5 int SOAP_FMAC6 ns1__runPsort2(struct soap*, char *_in0, char **_jobid);

SOAP_FMAC5 int SOAP_FMAC6 ns1__runPsortb(struct soap*, char *_in0, struct ns1__psortbInputParams *_params, char **_jobid);

SOAP_FMAC5 int SOAP_FMAC6 ns1__runSsearch(struct soap*, char *_in0, struct ns1__ssearchInputParams *_params, char **_jobid);

SOAP_FMAC5 int SOAP_FMAC6 ns1__runTcoffee(struct soap*, char *_in0, struct ns1__tcoffeeInputParams *_params, char **_jobid);

SOAP_FMAC5 int SOAP_FMAC6 ns1__runtRNAscan(struct soap*, char *_in0, struct ns1__tRNAscanInputParams *_params, char **_jobid);

SOAP_FMAC5 int SOAP_FMAC6 ns1__runWeblogo(struct soap*, char *_in0, struct ns1__weblogoInputParams *_params, char **_jobid);

SOAP_FMAC5 int SOAP_FMAC6 ns1__runWolfPsort(struct soap*, char *_in0, struct ns1__wolfPsortInputParams *_params, char **_jobid);

SOAP_FMAC5 int SOAP_FMAC6 ns1__runRNAfold(struct soap*, char *_in0, struct ns1__RNAfoldInputParams *_params, char **_jobid);

SOAP_FMAC5 int SOAP_FMAC6 ns1__showBlastDB(struct soap*, struct ns1__showBlastDBInputParams *_params, char **_dblist);

SOAP_FMAC5 int SOAP_FMAC6 ns1__map2PathwayProjector(struct soap*, char *_in0, char **_jobid);

SOAP_FMAC5 int SOAP_FMAC6 ns1__checkStatus(struct soap*, char *_jobid, int *_status);

SOAP_FMAC5 int SOAP_FMAC6 ns1__checkStatus_USCOREretJobid(struct soap*, char *_jobid_USCOREin, char **_jobid_USCOREout);

SOAP_FMAC5 int SOAP_FMAC6 ns1__getResult(struct soap*, char *_jobid, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 ns1__getMultiResult(struct soap*, char *_jobid, char *_type, char **_result);

/******************************************************************************\
 *                                                                            *
 * Stubs                                                                      *
 *                                                                            *
\******************************************************************************/


SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__runBlast(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_in0, struct ns1__blastInputParams *_params, char **_jobid);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__runCentroidfold(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_in0, struct ns1__centroidfoldInputParams *_params, char **_jobid);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__runClustalw(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_in0, struct ns1__clustalwInputParams *_params, char **_jobid);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__runFetchData(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_in0, struct ns1__fetchDataInputParams *_params, char **_jobid);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__runFetchBatch(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_in0, char *_in1, struct ns1__fetchBatchInputParams *_params, char **_jobid);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__runGenemarkhmm(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_in0, struct ns1__genemarkhmmInputParams *_params, char **_jobid);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__runGlimmer(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_in0, struct ns1__glimmerInputParams *_params, char **_jobid);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__runKalign(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_in0, struct ns1__kalignInputParams *_params, char **_jobid);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__runMafft(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_in0, struct ns1__mafftInputParams *_params, char **_jobid);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__runMuscle(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_in0, struct ns1__muscleInputParams *_params, char **_jobid);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__runPhobius(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_in0, struct ns1__phobiusInputParams *_params, char **_jobid);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__runProtpars(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_in0, char **_jobid);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__runProtdist(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_in0, char **_jobid);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__runDnapars(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_in0, char **_jobid);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__runDnapenny(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_in0, char **_jobid);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__runDnacomp(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_in0, char **_jobid);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__runDnainvar(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_in0, char **_jobid);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__runDnaml(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_in0, char **_jobid);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__runDnamlk(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_in0, char **_jobid);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__runDnadist(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_in0, char **_jobid);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__runGendist(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_in0, char **_jobid);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__runSeqboot(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_in0, char **_jobid);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__runRestml(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_in0, char **_jobid);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__runClique(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_in0, char **_jobid);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__runFitch(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_in0, char **_jobid);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__runKitsch(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_in0, char **_jobid);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__runNeighbor(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_in0, char **_jobid);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__runContml(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_in0, char **_jobid);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__runMix(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_in0, char **_jobid);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__runPenny(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_in0, char **_jobid);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__runDollop(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_in0, char **_jobid);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__runDolpenny(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_in0, char **_jobid);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__runPsort(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_in0, struct ns1__psortInputParams *_params, char **_jobid);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__runPsort2(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_in0, char **_jobid);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__runPsortb(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_in0, struct ns1__psortbInputParams *_params, char **_jobid);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__runSsearch(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_in0, struct ns1__ssearchInputParams *_params, char **_jobid);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__runTcoffee(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_in0, struct ns1__tcoffeeInputParams *_params, char **_jobid);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__runtRNAscan(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_in0, struct ns1__tRNAscanInputParams *_params, char **_jobid);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__runWeblogo(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_in0, struct ns1__weblogoInputParams *_params, char **_jobid);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__runWolfPsort(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_in0, struct ns1__wolfPsortInputParams *_params, char **_jobid);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__runRNAfold(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_in0, struct ns1__RNAfoldInputParams *_params, char **_jobid);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__showBlastDB(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct ns1__showBlastDBInputParams *_params, char **_dblist);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__map2PathwayProjector(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_in0, char **_jobid);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__checkStatus(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_jobid, int *_status);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__checkStatus_USCOREretJobid(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_jobid_USCOREin, char **_jobid_USCOREout);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__getResult(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_jobid, char **_result);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__getMultiResult(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_jobid, char *_type, char **_result);

/******************************************************************************\
 *                                                                            *
 * Skeletons                                                                  *
 *                                                                            *
\******************************************************************************/

SOAP_FMAC5 int SOAP_FMAC6 soap_serve(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_request(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__runBlast(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__runCentroidfold(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__runClustalw(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__runFetchData(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__runFetchBatch(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__runGenemarkhmm(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__runGlimmer(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__runKalign(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__runMafft(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__runMuscle(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__runPhobius(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__runProtpars(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__runProtdist(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__runDnapars(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__runDnapenny(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__runDnacomp(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__runDnainvar(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__runDnaml(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__runDnamlk(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__runDnadist(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__runGendist(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__runSeqboot(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__runRestml(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__runClique(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__runFitch(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__runKitsch(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__runNeighbor(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__runContml(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__runMix(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__runPenny(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__runDollop(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__runDolpenny(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__runPsort(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__runPsort2(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__runPsortb(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__runSsearch(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__runTcoffee(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__runtRNAscan(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__runWeblogo(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__runWolfPsort(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__runRNAfold(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__showBlastDB(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__map2PathwayProjector(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__checkStatus(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__checkStatus_USCOREretJobid(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__getResult(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__getMultiResult(struct soap*);

#ifdef __cplusplus
}
#endif

#endif

/* End of soapStub.h */
